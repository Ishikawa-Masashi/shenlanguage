"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[5752],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,g=c["".concat(l,".").concat(u)]||c[u]||m[u]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},16415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},i="Grid",p={unversionedId:"components/layout/grid/index",id:"components/layout/grid/index",title:"Grid",description:"Grid is a layout for managing grid layouts",source:"@site/content/docs/components/layout/grid/index.mdx",sourceDirName:"components/layout/grid",slug:"/components/layout/grid/",permalink:"/shenlanguage/docs/components/layout/grid/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Flex",permalink:"/shenlanguage/docs/components/layout/flex/"},next:{title:"SimpleGrid",permalink:"/shenlanguage/docs/components/layout/simple-grid/"}},l={},s=[{value:"Import",id:"import",level:2},{value:"Template columns",id:"template-columns",level:2},{value:"Spanning columns",id:"spanning-columns",level:2},{value:"Starting and ending lines",id:"starting-and-ending-lines",level:2},{value:"Template areas",id:"template-areas",level:2},{value:"Props",id:"props",level:2},{value:"Grid Props",id:"grid-props",level:3},{value:"GridItem Props",id:"griditem-props",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=d("ComponentLinks"),c=d("PropsTable"),u={toc:s};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"grid"},"Grid"),(0,r.kt)("p",null,"Grid is a layout for managing grid layouts"),(0,r.kt)(m,{github:{package:"layout"},npm:{package:"@chakra-ui/layout"},mdxType:"ComponentLinks"}),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Grid, GridItem } from "@chakra-ui/react";\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Grid:")," The main wrapper with ",(0,r.kt)("inlineCode",{parentName:"li"},"display: grid"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GridItem:")," Used as a child of ",(0,r.kt)("inlineCode",{parentName:"li"},"Grid")," to control the span, and start\npositions within the grid.")),(0,r.kt)("h2",{id:"template-columns"},"Template columns"),(0,r.kt)("p",null,"Here's an example of using grid template columns with the ",(0,r.kt)("inlineCode",{parentName:"p"},"grid")," component, and\napplying a ",(0,r.kt)("inlineCode",{parentName:"p"},"gap")," or space between the grid items."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live sm",live:!0,sm:!0},'<Grid templateColumns="repeat(5, 1fr)" gap={6}>\n  <GridItem w="100%" h="10" bg="blue.500" />\n  <GridItem w="100%" h="10" bg="blue.500" />\n  <GridItem w="100%" h="10" bg="blue.500" />\n  <GridItem w="100%" h="10" bg="blue.500" />\n  <GridItem w="100%" h="10" bg="blue.500" />\n</Grid>\n')),(0,r.kt)("h2",{id:"spanning-columns"},"Spanning columns"),(0,r.kt)("p",null,"In some layouts, you may need certain grid items to span specific amount of\ncolumns or rows instead of an even distribution. To achieve this, you need to\npass the ",(0,r.kt)("inlineCode",{parentName:"p"},"colSpan")," prop to the ",(0,r.kt)("inlineCode",{parentName:"p"},"GridItem")," component to span across columns and\nalso pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"rowSpan")," component to span across rows. You also need to specify\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"templateColumns")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"templateRows"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'<Grid\n  h="200px"\n  templateRows="repeat(2, 1fr)"\n  templateColumns="repeat(5, 1fr)"\n  gap={4}\n>\n  <GridItem rowSpan={2} colSpan={1} bg="tomato" />\n  <GridItem colSpan={2} bg="papayawhip" />\n  <GridItem colSpan={2} bg="papayawhip" />\n  <GridItem colSpan={4} bg="tomato" />\n</Grid>\n')),(0,r.kt)("h2",{id:"starting-and-ending-lines"},"Starting and ending lines"),(0,r.kt)("p",null,"Pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"colStart")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"colEnd")," prop to ",(0,r.kt)("inlineCode",{parentName:"p"},"GridItem")," component to make an element\nstart or end at the ",(0,r.kt)("inlineCode",{parentName:"p"},"nth")," grid position."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live sm",live:!0,sm:!0},'<Grid templateColumns="repeat(5, 1fr)" gap={4}>\n  <GridItem colSpan={2} h="10" bg="tomato" />\n  <GridItem colStart={4} colEnd={6} h="10" bg="papayawhip" />\n</Grid>\n')),(0,r.kt)("h2",{id:"template-areas"},"Template areas"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"templateAreas")," prop specifies areas within the grid layout. Use template\nliterals to name the area. Now you can reference the area by passing ",(0,r.kt)("inlineCode",{parentName:"p"},"area")," prop\nin the ",(0,r.kt)("inlineCode",{parentName:"p"},"<GridItem />")," component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'<Grid\n  templateAreas={`"header header"\n                  "nav main"\n                  "nav footer"`}\n  gridTemplateRows={"50px 1fr 30px"}\n  gridTemplateColumns={"150px 1fr"}\n  h="200px"\n  gap="1"\n  color="blackAlpha.700"\n  fontWeight="bold"\n>\n  <GridItem pl="2" bg="orange.300" area={"header"}>\n    Header\n  </GridItem>\n  <GridItem pl="2" bg="pink.300" area={"nav"}>\n    Nav\n  </GridItem>\n  <GridItem pl="2" bg="green.300" area={"main"}>\n    Main\n  </GridItem>\n  <GridItem pl="2" bg="blue.300" area={"footer"}>\n    Footer\n  </GridItem>\n</Grid>\n')),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("h3",{id:"grid-props"},"Grid Props"),(0,r.kt)("p",null,"Grid composes ",(0,r.kt)("inlineCode",{parentName:"p"},"Box")," so you can pass all the ",(0,r.kt)("inlineCode",{parentName:"p"},"Box")," prop, and these shorthand prop\nto save you some time:"),(0,r.kt)(c,{of:"Grid",mdxType:"PropsTable"}),(0,r.kt)("h3",{id:"griditem-props"},"GridItem Props"),(0,r.kt)(c,{of:"GridItem",mdxType:"PropsTable"}))}g.isMDXComponent=!0}}]);