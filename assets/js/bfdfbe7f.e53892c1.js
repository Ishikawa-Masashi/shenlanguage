"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[6649],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=o.createContext({}),s=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(d.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),u=a,h=m["".concat(d,".").concat(u)]||m[u]||c[u]||r;return t?o.createElement(h,i(i({ref:n},p),{},{components:t})):o.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},50591:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>s,metadata:()=>m,toc:()=>u});var o=t(87462),a=(t(67294),t(3905));const r=(i="SandpackEditor",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var i;const l={toc:[]};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(r,{mdxType:"SandpackEditor"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"heading-theme.tsx","heading-theme.tsx":!0},'import { defineStyle, defineStyleConfig } from "@chakra-ui/styled-system"\nconst brandPrimary = defineStyle({\n    color: "blue.500",\n    // let\'s also provide dark mode alternatives\n    _dark: {\n        color: \'blue.300\',\n    }\n})\n\nconst custom = defineStyle({\n    color: "yellow.500",\n    fontFamily: "mono",\n    fontWeight: "semibold",\n    // let\'s also provide dark mode alternatives\n    _dark: {\n        color: \'yellow.300\',\n    }\n})\n\nconst underline = defineStyle({\n    color: "orange.500",\n    borderBottom: "2px",\n    borderRadius: "10",\n    fontFamily: "serif",\n    // let\'s also provide dark mode alternatives\n    _dark: {\n        color: \'orange.400\',\n    },\n    _hover: {\n        borderColor: "red.200",\n        _dark: {\n            borderColor: "red.300"\n        }\n    }\n})\n\nexport const headingTheme = defineStyleConfig({\n    variants: {\n        brand: brandPrimary,\n        "custom": custom,\n        "underline": underline\n    },\n})\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"heading.tsx","heading.tsx":!0},'import { Box, SimpleGrid, IconButton, Heading, useColorMode } from "@chakra-ui/react";\nimport { FaMoon, FaSun } from "react-icons/fa";\n\nconst HeadingPreview = () => {\n    const { toggleColorMode, colorMode } = useColorMode();\n\n    return (\n        <Box position="relative" h="100vh">\n            <SimpleGrid gap={12} p={12} columns={2}>\n              <Heading>Default heading</Heading>\n              <Heading variant="custom">Themed heading</Heading>\n              <Heading variant="brand">Branded heading</Heading>\n              <Heading variant="underline">Underlined heading</Heading>\n            </SimpleGrid>\n            <IconButton\n                aria-label="toggle theme"\n                rounded="full"\n                size="xs"\n                position="absolute"\n                bottom={4}\n                left={4}\n                onClick={toggleColorMode} icon={colorMode === "dark" ? <FaSun /> : <FaMoon />}\n            />\n        </Box>\n    );\n}\n\nexport default HeadingPreview;\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"App.tsx","App.tsx":!0},'import { ChakraProvider, extendTheme } from "@chakra-ui/react";\nimport Heading from "./heading";\nimport { headingTheme } from "./heading-theme";\n\nconst theme = extendTheme({\n  components: {\n    Heading: headingTheme,\n  }\n});\n\nconst App = () => {\n  return (\n    <ChakraProvider theme={theme}>\n      <Heading />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n'))))}d.isMDXComponent=!0;const s={},p="Theming",m={unversionedId:"components/typography/heading/theming",id:"components/typography/heading/theming",title:"Theming",description:"The Heading component is a single part component. All of the styling is",source:"@site/content/docs/components/typography/heading/theming.mdx",sourceDirName:"components/typography/heading",slug:"/components/typography/heading/theming",permalink:"/docs/components/typography/heading/theming",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675293453,formattedLastUpdatedAt:"Feb 1, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Heading",permalink:"/docs/components/typography/heading/"},next:{title:"Highlight",permalink:"/docs/components/typography/highlight/"}},c={},u=[{value:"Theming properties",id:"theming-properties",level:2},{value:"Theming utilities",id:"theming-utilities",level:2},{value:"Customizing the default theme",id:"customizing-the-default-theme",level:2},{value:"Adding a custom variant",id:"adding-a-custom-variant",level:2},{value:"Changing the default properties",id:"changing-the-default-properties",level:2},{value:"Showcase",id:"showcase",level:2}],h={toc:u};function g(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"theming"},"Theming"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Heading")," component is a single part component. All of the styling is\napplied directly to the ",(0,a.kt)("inlineCode",{parentName:"p"},"h2")," element."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"To learn more about styling single part components, visit the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/styled-system/theming/component-style#styling-single-part-components"},"Component Style"),"\npage")),(0,a.kt)("h2",{id:"theming-properties"},"Theming properties"),(0,a.kt)("p",null,"The properties that affect the theming of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Heading")," component are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"size"),": The size of the divider. Defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"xl"),".")),(0,a.kt)("h2",{id:"theming-utilities"},"Theming utilities"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"defineStyle"),": a function used to create style objects."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"defineStyleConfig"),": a function used to define the style configuration for a\nsingle part component.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { defineStyle, defineStyleConfig } from "@chakra-ui/react";\n')),(0,a.kt)("h2",{id:"customizing-the-default-theme"},"Customizing the default theme"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { defineStyle, defineStyleConfig } from \'@chakra-ui/react\'\n\nconst custom = defineStyle({\n    color: "yellow.500",\n    fontFamily: "mono",\n    fontWeight: "semibold"\n    // let\'s also provide dark mode alternatives\n    _dark: {\n        color: \'yellow.300\',\n    }\n})\n')),(0,a.kt)("p",null,"After customizing the heading theme, we can import it in our theme file and add\nit in the components property:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { extendTheme } from "@chakra-ui/react";\nimport { headingTheme } from "./components/heading";\n\nexport const theme = extendTheme({\n  components: { Heading: headingTheme },\n});\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This is a crucial step to make sure that any changes that we make to the\nheading theme are applied.")),(0,a.kt)("h2",{id:"adding-a-custom-variant"},"Adding a custom variant"),(0,a.kt)("p",null,"Let's assume we want to include a custom branded variant. Here's how we can do\nthat:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { defineStyle, defineStyleConfig } from \'@chakra-ui/react\'\n\nconst underline = defineStyle({\n    color: "orange.500",\n    borderBottom: "2px",\n    borderRadius: "10",\n    fontFamily: "serif"\n    // let\'s also provide dark mode alternatives\n    _dark: {\n        color: \'orange.400\',\n    },\n    _hover: {\n        borderColor: "red.200",\n        _dark: {\n            borderColor: "red.300"\n        }\n    }\n})\n\n// Now we can use the new `underline` variant\n<Heading variant="underline">...</Heading>\n')),(0,a.kt)("p",null,"Every time you're adding anything new to the theme, you'd need to run the cli\ncommand to get proper autocomplete in your IDE. You can learn more about the CLI\ntool ",(0,a.kt)("a",{parentName:"p",href:"/docs/styled-system/cli"},"here"),"."),(0,a.kt)("h2",{id:"changing-the-default-properties"},"Changing the default properties"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { defineStyleConfig } from '@chakra-ui/react'\n\nexport const headingheme = defineStyleConfig({\n    defaultProps: {\n        size: 'xl',\n        variant: 'custom',\n        colorScheme: 'brand',\n    },\n})\n\n// This saves you time, instead of manually setting the size,\n// variant every time you use a heading:\n<Heading size=\"xl\" variant=\"underline\">...</Heading>\n")),(0,a.kt)("h2",{id:"showcase"},"Showcase"),(0,a.kt)(d,{mdxType:"Showcase"}))}g.isMDXComponent=!0}}]);