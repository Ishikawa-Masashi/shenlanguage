"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[8342],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=r,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},35228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={title:"RTL Support",version:"1.1+",description:"Chakra UI provides built-in support right-to-left (RTL) languages like arabic and hebrew, out of the box.",category:"features"},o=void 0,l={unversionedId:"styled-system/rtl-support",id:"styled-system/rtl-support",title:"RTL Support",description:"Chakra UI provides built-in support right-to-left (RTL) languages like arabic and hebrew, out of the box.",source:"@site/content/docs/styled-system/rtl-support.mdx",sourceDirName:"styled-system",slug:"/styled-system/rtl-support",permalink:"/docs/styled-system/rtl-support",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675293453,formattedLastUpdatedAt:"Feb 1, 2023",frontMatter:{title:"RTL Support",version:"1.1+",description:"Chakra UI provides built-in support right-to-left (RTL) languages like arabic and hebrew, out of the box.",category:"features"},sidebar:"defaultSidebar",previous:{title:"Responsive Styles",permalink:"/docs/styled-system/responsive-styles"},next:{title:"Semantic Tokens",permalink:"/docs/styled-system/semantic-tokens"}},p={},d=[{value:"Using RTL Stylis Plugin",id:"using-rtl-stylis-plugin",level:2},{value:"Caveats of this approach",id:"caveats-of-this-approach",level:3},{value:"Using RTL-aware style props",id:"using-rtl-aware-style-props",level:2},{value:"Additional resources",id:"additional-resources",level:2}],s={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"For right-to-left (RTL) languages such as Arabic and Hebrew to be semantically\nappropriate, in addition to translating the texts, you need to also mirror the\nlayout."),(0,r.kt)("p",null,"Chakra UI makes it possible to support RTL languages and LTR languages in the\nsame app. There are 2 methods of adding RTL support:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Using the RTL Stylis Plugin"),(0,r.kt)("li",{parentName:"ul"},"Using RTL-aware style props")),(0,r.kt)("h2",{id:"using-rtl-stylis-plugin"},"Using RTL Stylis Plugin"),(0,r.kt)("p",null,"Since Chakra UI is built on top of ",(0,r.kt)("inlineCode",{parentName:"p"},"@emotion/react"),", you can leverage stylis\nplugins like ",(0,r.kt)("inlineCode",{parentName:"p"},"stylis-plugin-rtl")," to automatically transform the generated styles\nto their RTL equivalent."),(0,r.kt)("p",null,"Here's how to set it up."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the stylis plugin and emotion's cache"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm i stylis stylis-plugin-rtl @emotion/cache\n\n# or\n\nyarn add stylis stylis-plugin-rtl @emotion/cache\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the RTL provider using ",(0,r.kt)("inlineCode",{parentName:"p"},"CacheProvider")," from emotion"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/rtl-provider.js"',title:'"src/components/rtl-provider.js"'},"import { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport rtl from 'stylis-plugin-rtl';\n\n// NB: A unique `key` is important for it to work!\nconst options = {\n  rtl: { key: 'css-ar', stylisPlugins: [rtl] },\n  ltr: { key: 'css-en' },\n};\n\nexport function RtlProvider({ children }) {\n  const { locale } = useRouter();\n  const dir = locale == 'ar' ? 'rtl' : 'ltr';\n  const cache = createCache(options[dir]);\n  return <CacheProvider value={cache} children={children} />;\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add RTL provider to the application's root"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'ln={4,10-12} title="pages/_app.js"',ln:"{4,10-12}",title:'"pages/_app.js"'},"import { ChakraProvider } from '@chakra-ui/react';\nimport { RtlProvider } from '@/components/rtl-provider';\n\nfunction App(props) {\n  const { Component, pageProps } = props;\n  return (\n    <ChakraProvider>\n      <RtlProvider>\n        <Component {...pageProps} />\n      </RtlProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"dir")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"lang")," attributes to the ",(0,r.kt)("inlineCode",{parentName:"p"},"html")," tag."),(0,r.kt)("p",{parentName:"li"},"You'll need to make a few changes to your markup. In the ",(0,r.kt)("inlineCode",{parentName:"p"},"<html>")," tag, you'll\nneed to add a ",(0,r.kt)("inlineCode",{parentName:"p"},"dir")," attribute with a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"rtl")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"ltr"),". Here's what your\n",(0,r.kt)("inlineCode",{parentName:"p"},"<html>")," tag should look like:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'/**\n * `lang` can be "ar", "en", "he", etc.\n * `dir` can be "rtl" or "ltr"\n */\n<html lang=\'ar\' dir=\'rtl\'>\n  {/* Content */}\n</html>\n')),(0,r.kt)("p",{parentName:"li"},"In Next.js, you can achieve this by adding a ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/_document.js")," file and using\nthis API:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'ln={11-12,15} title="pages/_document.js"',ln:"{11-12,15}",title:'"pages/_document.js"'},'import NextDocument, { Html, Head, Main, NextScript } from "next/document"\n\nclass Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    return await NextDocument.getInitialProps(ctx)\n  }\n\n  render() {\n    const { locale } = this.props.__NEXT_DATA__\n    const dir = locale === "ar" ? "rtl" : "ltr"\n    return (\n      {/* \ud83d\udc47\ud83c\udffb Here\'s the place to change the `dir` and `lang` */}\n      <Html dir={dir} lang={locale}>\n        <Head />\n        <body >\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default Document\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a way to switch between LTR and RTL"),(0,r.kt)("p",{parentName:"li"},"For example, in ",(0,r.kt)("inlineCode",{parentName:"p"},"Next.js"),", you can change the ",(0,r.kt)("inlineCode",{parentName:"p"},"locale")," on the route by\nleveraging the built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"useRouter")," hook."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/lang-switcher.js"',title:'"src/components/lang-switcher.js"'},"function LangSwitcher() {\n  const { locale, push, reload, pathname } = useRouter();\n  const nextLocale = locale === 'en' ? 'ar' : 'en';\n\n  const onClick = async () => {\n    await push(pathname, { locale: nextLocale });\n    // force a reload for it to work correctly.\n    reload();\n  };\n\n  return <button onClick={onClick}>Change to {nextLocale}</button>;\n}\n\nexport default LangSwitcher;\n")))),(0,r.kt)("h3",{id:"caveats-of-this-approach"},"Caveats of this approach"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You might need to force a reload of the page to get it working correctly."),(0,r.kt)("li",{parentName:"ul"},"You might need to change the placement of components like ",(0,r.kt)("inlineCode",{parentName:"li"},"Popover"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Drawer"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"Tooltip")," to match RTL."),(0,r.kt)("li",{parentName:"ul"},"The need to install extra packages like ",(0,r.kt)("inlineCode",{parentName:"li"},"stylis"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"stylis-plugin-rtl")," might\nincrease your final bundle.")),(0,r.kt)("h2",{id:"using-rtl-aware-style-props"},"Using RTL-aware style props"),(0,r.kt)("p",null,"This is the recommended way to support RTL in Chakra UI. With this approach we\nuse the appropriate CSS logical properties, and manage the placements of\ncomponents like ",(0,r.kt)("inlineCode",{parentName:"p"},"Popover"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Drawer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Tooltip")," to match RTL."),(0,r.kt)("p",null,"Here's how to set it up:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"direction")," key to the theme"),(0,r.kt)("p",{parentName:"li"},"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"extendTheme")," function or any other preferred approach to add\n",(0,r.kt)("inlineCode",{parentName:"p"},"direction")," key to the theme. Then, add the custom theme to ",(0,r.kt)("inlineCode",{parentName:"p"},"ChakraProvider"),"."),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Due to the fact that some CSS logical properties aren't supported in all\nbrowsers, we flip the styles based on the ",(0,r.kt)("inlineCode",{parentName:"p"},"direction")," as a temporary polyfill.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/chakra-rtl-provider.js"',title:'"src/components/chakra-rtl-provider.js"'},"function ChakraRTLProvider({ children }) {\n  const { locale } = useRouter();\n  const direction = locale === 'ar' ? 'rtl' : 'ltr';\n\n  // \ud83d\udc47\ud83c\udffb Here's the place we add direction to the theme\n  const theme = extendTheme({ direction });\n\n  return <ChakraProvider theme={theme}>{children}</ChakraProvider>;\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"dir")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"lang")," attributes to the ",(0,r.kt)("inlineCode",{parentName:"p"},"html")," tag."),(0,r.kt)("p",{parentName:"li"},"In Next.js, you can achieve this by adding a ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/_document.js")," file and using\nthis API:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'ln={11-12,15} title="pages/_document.js"',ln:"{11-12,15}",title:'"pages/_document.js"'},'import NextDocument, { Html, Head, Main, NextScript } from "next/document"\n\nclass Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    return await NextDocument.getInitialProps(ctx)\n  }\n\n  render() {\n    const { locale } = this.props.__NEXT_DATA__\n    const dir = locale === "ar" ? "rtl" : "ltr"\n    return (\n      {/* \ud83d\udc47\ud83c\udffb Here\'s the place to change the `dir` and `lang` */}\n      <Html dir={dir} lang={locale}>\n        <Head />\n        <body >\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default Document\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Replace style props with their RTL-aware equivalent"),(0,r.kt)("p",{parentName:"li"},"To get our internal RTL system working, you need to replace all physical\n",(0,r.kt)("inlineCode",{parentName:"p"},"*-left")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"*-right")," styles (passed as props or in the ",(0,r.kt)("inlineCode",{parentName:"p"},"sx")," prop) to their\nbi-directional versions (",(0,r.kt)("inlineCode",{parentName:"p"},"*-start")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"*-end"),")."),(0,r.kt)("p",{parentName:"li"},"For example:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"paddingLeft")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"pl")," prop with ",(0,r.kt)("inlineCode",{parentName:"li"},"paddingStart")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"ps")),(0,r.kt)("li",{parentName:"ul"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"marginRight")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"mr")," prop with ",(0,r.kt)("inlineCode",{parentName:"li"},"marginEnd")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"me")),(0,r.kt)("li",{parentName:"ul"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"borderLeftRadius")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"borderStartRadius"))),(0,r.kt)("p",{parentName:"li"},"Here's a list of the RTL-aware style props you can use alongside other\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties"},"CSS logical properties"),":"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Style prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Replace with"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"paddingLeft"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"pl")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"paddingStart"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ps")),(0,r.kt)("td",{parentName:"tr",align:null},"padding in start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"paddingRight"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"pr")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"paddingEnd"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"pe")),(0,r.kt)("td",{parentName:"tr",align:null},"padding in end direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"marginLeft"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ml")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"marginStart"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"ms")),(0,r.kt)("td",{parentName:"tr",align:null},"margin in start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"marginRight"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"mr")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"marginEnd"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"me")),(0,r.kt)("td",{parentName:"tr",align:null},"margin in end direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedLeft"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderLeftRadius")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedStart"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderStartRadius")),(0,r.kt)("td",{parentName:"tr",align:null},"rounded borders in start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedRight"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderRightRadius")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedEnd"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderEndRadius")),(0,r.kt)("td",{parentName:"tr",align:null},"rounded borders in end direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedTopLeft"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderTopLeftRadius")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedTopStart"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderTopStartRadius")),(0,r.kt)("td",{parentName:"tr",align:null},"rounded borders in top start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedTopRight"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderTopRightRadius")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedTopEnd"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderTopEndRadius")),(0,r.kt)("td",{parentName:"tr",align:null},"rounded borders in top end direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedBottomLeft"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderBottomLeftRadius")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedBottomStart"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderBottomStartRadius")),(0,r.kt)("td",{parentName:"tr",align:null},"rounded borders in bottom start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedBottomRight"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderBottomRightRadius")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"roundedBottomEnd"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderBottomEndRadius")),(0,r.kt)("td",{parentName:"tr",align:null},"rounded borders in bottom end direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"borderLeft")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"borderStart"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderInlineStart")),(0,r.kt)("td",{parentName:"tr",align:null},"border width in start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"borderRight")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"borderEnd"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"borderInlineEnd")),(0,r.kt)("td",{parentName:"tr",align:null},"border width in end direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"left")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"insetStart"),","),(0,r.kt)("td",{parentName:"tr",align:null},"horizontal position in start direction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"right")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"insetEnd"),","),(0,r.kt)("td",{parentName:"tr",align:null},"horizontal position in end direction"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a way to switch between LTR and RTL"),(0,r.kt)("p",{parentName:"li"},"For example, in ",(0,r.kt)("inlineCode",{parentName:"p"},"Next.js"),", you can change the ",(0,r.kt)("inlineCode",{parentName:"p"},"locale")," on the route by\nleveraging the built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"useRouter")," hook."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/lang-switcher.js"',title:'"src/components/lang-switcher.js"'},"function LangSwitcher() {\n  const { locale, push, reload, pathname } = useRouter();\n  const nextLocale = locale === 'en' ? 'ar' : 'en';\n\n  const onClick = async () => {\n    await push(pathname, { locale: nextLocale });\n  };\n\n  return <button onClick={onClick}>Change to {nextLocale}</button>;\n}\n\nexport default LangSwitcher;\n")),(0,r.kt)("p",{parentName:"li"},"Asides updating the style props you use in your application, we think this is\nthe best approach. In the end it's up to your team to decide which approach to\ngo with."))),(0,r.kt)("h2",{id:"additional-resources"},"Additional resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Blog Post -\n",(0,r.kt)("a",{parentName:"li",href:"https://dev.to/ugbechike/setup-an-internationalization-i18n-routing-web-app-with-nextjs-and-chakra-ui-39f1"},"Setup an i18n routing with Nextjs and Chakra UI")),(0,r.kt)("li",{parentName:"ul"},"MDN\n",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties"},"CSS Logical Properties"))))}m.isMDXComponent=!0}}]);