"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[4388],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),c=a,h=u["".concat(s,".").concat(c)]||u[c]||m[c]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const o={title:"useDimensions",package:"@chakra-ui/hooks",description:"React hook to measure dimensions of the referenced element"},i=void 0,l={unversionedId:"hooks/use-dimensions",id:"hooks/use-dimensions",title:"useDimensions",description:"React hook to measure dimensions of the referenced element",source:"@site/content/docs/hooks/use-dimensions.mdx",sourceDirName:"hooks",slug:"/hooks/use-dimensions",permalink:"/docs/hooks/use-dimensions",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{title:"useDimensions",package:"@chakra-ui/hooks",description:"React hook to measure dimensions of the referenced element"},sidebar:"defaultSidebar",previous:{title:"useControllableState",permalink:"/docs/hooks/use-controllable"},next:{title:"useDisclosure",permalink:"/docs/hooks/use-disclosure"}},s={},d=[{value:"Import",id:"import",level:2},{value:"Return value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2},{value:"With <code>observe</code> Parameter",id:"with-observe-parameter",level:3},{value:"Parameters",id:"parameters",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useDimensions")," is a custom hook that measures dimensions of the referenced\nelement based on its box-model."),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { useDimensions } from '@chakra-ui/react'\n")),(0,a.kt)("h2",{id:"return-value"},"Return value"),(0,a.kt)("p",null,"This hook returns an object with the properties ",(0,a.kt)("inlineCode",{parentName:"p"},"marginBox"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"paddingBox"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"borderBox"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"contentBox"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"border"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"padding"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"margin"),"."),(0,a.kt)("p",null,"Each of these properties contains a nested object which provides values\nrespective to that property:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Value:"),(0,a.kt)("th",{parentName:"tr",align:null},"Contents:"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"marginBox"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left, width, height, x, y, center (x, y)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"borderBox"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left, width, height, x, y, center (x, y)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"paddingBox"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left, width, height, x, y, center (x, y)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"contentBox"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left, width, height, x, y, center (x, y)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"border"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"padding"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"margin"),(0,a.kt)("td",{parentName:"tr",align:null},"top, right, bottom, left")))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function example() {\n  const elementRef = useRef()\n  const dimensions = useDimensions(elementRef)\n\n  return (\n    <Box ref={elementRef} color='white' width='fit-content' bg='blue.700' p={4}>\n      <Heading>\n        <code>borderBox</code> dimensions\n      </Heading>\n      <List>\n        <ListItem>\n          The Width: {dimensions && dimensions.borderBox.width}\n        </ListItem>\n        <ListItem>\n          The x coordinate: {dimensions && dimensions.borderBox.x}\n        </ListItem>\n      </List>\n    </Box>\n  )\n}\n")),(0,a.kt)("h3",{id:"with-observe-parameter"},"With ",(0,a.kt)("inlineCode",{parentName:"h3"},"observe")," Parameter"),(0,a.kt)("p",null,"With the second parameter set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", the hook will attach the ",(0,a.kt)("inlineCode",{parentName:"p"},"resize")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"scroll")," events to the window object. This will recalculate the reference\nelement's dimensions on scroll or resize of the page."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function example() {\n  const elementRef = useRef()\n  const dimensions = useDimensions(elementRef, true)\n\n  return (\n    <>\n      <Textarea\n        ref={elementRef}\n        value="Resize this field\'s height, then either scroll or resize the page."\n      />\n      <Box>Changing height: {dimensions && dimensions.borderBox.height}</Box>\n    </>\n  )\n}\n')),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"ref")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"RefObject<HTMLElement>")),(0,a.kt)("td",{parentName:"tr",align:null},"Reference to the element you want to measure")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"observe (optional)")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"boolean")),(0,a.kt)("td",{parentName:"tr",align:null},"If set to true, the ",(0,a.kt)("inlineCode",{parentName:"td"},"resize")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"scroll")," events will be attached to the window and update the dimensions on each event")))))}m.isMDXComponent=!0}}]);