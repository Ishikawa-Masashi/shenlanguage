"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[5537],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,d=f["".concat(u,".").concat(m)]||f[m]||p[m]||a;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},31957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={title:"useMergeRefs",package:"@chakra-ui/hooks",description:"React hook that merges react refs into a single memoized function"},s=void 0,i={unversionedId:"hooks/use-merge-refs",id:"hooks/use-merge-refs",title:"useMergeRefs",description:"React hook that merges react refs into a single memoized function",source:"@site/content/docs/hooks/use-merge-refs.mdx",sourceDirName:"hooks",slug:"/hooks/use-merge-refs",permalink:"/shenlanguage/docs/hooks/use-merge-refs",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{title:"useMergeRefs",package:"@chakra-ui/hooks",description:"React hook that merges react refs into a single memoized function"},sidebar:"defaultSidebar",previous:{title:"useMediaQuery",permalink:"/shenlanguage/docs/hooks/use-media-query"},next:{title:"useOutsideClick",permalink:"/shenlanguage/docs/hooks/use-outside-click"}},u={},c=[{value:"Import",id:"import",level:2},{value:"Return value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2},{value:"Usage combining with another Chakra-UI hooks",id:"usage-combining-with-another-chakra-ui-hooks",level:3}],l={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useMergeRefs")," is a custom hook used to merge several react refs into a single\none."),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { useMergeRefs } from '@chakra-ui/react'\n")),(0,o.kt)("h2",{id:"return-value"},"Return value"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useMergeRefs")," hook returns a function that receives the element and assign\nthe value to the given React refs."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example({ ref, ...props }) {\n  const internalRef = React.useRef()\n  const refs = useMergeRefs(internalRef, ref)\n\n  return (\n    <div {...props} ref={refs}>\n      A div with multiple refs.\n    </div>\n  )\n}\n")),(0,o.kt)("h3",{id:"usage-combining-with-another-chakra-ui-hooks"},"Usage combining with another Chakra-UI hooks"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example({ ref, ...props }) {\n  const outsideRef = React.useRef()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const { popperRef, referenceRef } = usePopper()\n\n  useOutsideClick({\n    ref: outsideRef,\n    handler: () => isOpen && onClose(),\n  })\n\n  const buttonEl = useMergeRefs(outsideRef, referenceRef)\n\n  return (\n    <>\n      <button ref={buttonEl} onClick={onOpen}>\n        Click me to see the popover\n      </button>\n      {isOpen && (\n        <Box ref={popperRef} bg='green'>\n          Click outside to close me\n        </Box>\n      )}\n    </>\n  )\n}\n")))}p.isMDXComponent=!0}}]);