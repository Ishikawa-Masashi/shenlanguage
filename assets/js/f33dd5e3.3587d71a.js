"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[1780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),k=i(n),d=o,m=k["".concat(c,".").concat(d)]||k[d]||s[d]||a;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=k;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},45923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={title:"useCheckboxGroup",package:"@chakra-ui/checkbox",description:"React hooks to manage checkbox groups."},l=void 0,p={unversionedId:"hooks/use-checkbox-group",id:"hooks/use-checkbox-group",title:"useCheckboxGroup",description:"React hooks to manage checkbox groups.",source:"@site/content/docs/hooks/use-checkbox-group.mdx",sourceDirName:"hooks",slug:"/hooks/use-checkbox-group",permalink:"/docs/hooks/use-checkbox-group",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{title:"useCheckboxGroup",package:"@chakra-ui/checkbox",description:"React hooks to manage checkbox groups."},sidebar:"defaultSidebar",previous:{title:"useBreakpointValue",permalink:"/docs/hooks/use-breakpoint-value"},next:{title:"useCheckbox",permalink:"/docs/hooks/use-checkbox"}},c={},i=[{value:"Import",id:"import",level:2},{value:"Return value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2}],u=(s="PropsTable",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var s;const k={toc:i};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useCheckboxGroup")," is a custom hook that provides all the state management logic\nfor a group of checkboxes."),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { useCheckboxGroup } from '@chakra-ui/react'\n")),(0,o.kt)("h2",{id:"return-value"},"Return value"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useCheckboxGroup")," hook returns following props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"value")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"StringOrNumber[]")),(0,o.kt)("td",{parentName:"tr",align:null},"The value of checkbox group.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"isDisabled")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",{parentName:"tr",align:null},"A function to set the boolean value to ",(0,o.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onChange")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"(input: EventOrValue) => void")),(0,o.kt)("td",{parentName:"tr",align:null},"The onChange handler for the checkbox group.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"setValue")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"(state: StringOrNumber[]) => void")),(0,o.kt)("td",{parentName:"tr",align:null},"A function to set the value of the checkbox group.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getCheckboxProps")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"(props?: Dict) => Dict")),(0,o.kt)("td",{parentName:"tr",align:null},"A function that takes checkbox props returns them with a onChange handler for the checkbox group and the checked state.")))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  function CustomCheckbox(props) {\n    const { state, getCheckboxProps, getInputProps, getLabelProps, htmlProps } =\n      useCheckbox(props)\n\n    return (\n      <chakra.label\n        display='flex'\n        flexDirection='row'\n        alignItems='center'\n        gridColumnGap={2}\n        maxW='40'\n        bg='green.50'\n        border='1px solid'\n        borderColor='green.500'\n        rounded='lg'\n        px={3}\n        py={1}\n        cursor='pointer'\n        {...htmlProps}\n      >\n        <input {...getInputProps()} hidden />\n        <Flex\n          alignItems='center'\n          justifyContent='center'\n          border='2px solid'\n          borderColor='green.500'\n          w={4}\n          h={4}\n          {...getCheckboxProps()}\n        >\n          {state.isChecked && <Box w={2} h={2} bg='green.500' />}\n        </Flex>\n        <Text color=\"gray.700\" {...getLabelProps()}>Click me for {props.value}</Text>\n      </chakra.label>\n    )\n  }\n\n  const { value, getCheckboxProps } = useCheckboxGroup({\n    defaultValue: ['2'],\n  })\n\n  return (\n    <Stack>\n      <Text>The selected checkboxes are: {value.sort().join(' and ')}</Text>\n      <CustomCheckbox {...getCheckboxProps({ value: '1' })} />\n      <CustomCheckbox {...getCheckboxProps({ value: '2' })} />\n      <CustomCheckbox {...getCheckboxProps({ value: '3' })} />\n    </Stack>\n  )\n}\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useCheckboxGroup")," hook accepts an object with the following properties:"),(0,o.kt)(u,{of:"useCheckboxGroup",mdxType:"PropsTable"}))}d.isMDXComponent=!0}}]);