"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[3151],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,h=c["".concat(s,".").concat(u)]||c[u]||m[u]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},29209:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>p,metadata:()=>m,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const o=(i="SandpackEditor",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var i;const l={toc:[]};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o,{mdxType:"SandpackEditor"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"textarea-theme.tsx","textarea-theme.tsx":!0},'import { defineStyle, defineStyleConfig } from "@chakra-ui/react";\n\nconst baseStyle = defineStyle({\n  borderRadius: 0,\n  fontWeight: "normal",\n  border: "2px solid"\n});\n\nconst outline = defineStyle({\n  border: "2px dashed",\n  borderColor: "purple.500"\n});\n\nconst filled = defineStyle({\n  borderColor: "purple.500"\n});\n\nconst flushed = defineStyle({\n  borderColor: "purple.500"\n});\n\nconst brandPrimary = defineStyle({\n  borderColor: "purple.300",\n  background: "purple.50",\n  fontSize: "lg",\n  _focus: {\n    borderColor: "purple.500"\n  },\n  _dark: {\n    background: "purple.900",\n  }\n});\n  \nexport const textareaTheme = defineStyleConfig({\n  baseStyle,\n  variants: { outline, filled, flushed, brandPrimary }\n});\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"textarea.tsx","textarea.tsx":!0},'import { Box, SimpleGrid, IconButton, Textarea, useColorMode } from "@chakra-ui/react";\nimport { FaMoon, FaSun } from "react-icons/fa";\n\nconst TextArea = () => {\n  const { toggleColorMode, colorMode } = useColorMode();\n\n  return (\n    <Box position="relative" h="100vh">\n      <SimpleGrid gap={12} p={12} columns={2}>\n        <Textarea variant="flushed" placeholder="Flushed variant" />\n        <Textarea variant="filled" placeholder="Filled variant" />\n        <Textarea variant="outline" placeholder="Outlined variant" />\n        <Textarea variant="brandPrimary" placeholder="Custom variant" />\n      </SimpleGrid>\n\n      <IconButton\n        aria-label="toggle theme"\n        rounded="full"\n        size="xs"\n        position="absolute"\n        bottom={4}\n        left={4}\n        onClick={toggleColorMode}\n        icon={colorMode === "dark" ? <FaSun /> : <FaMoon />}\n      />\n    </Box>\n  );\n}\n\nexport default TextArea;\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"App.tsx","App.tsx":!0},'import { ChakraProvider, extendTheme } from "@chakra-ui/react";\nimport Textarea from "./textarea";\nimport { textareaTheme } from "./textarea-theme";\n\nconst theme = extendTheme({\n  components: {\n    Textarea: textareaTheme,\n  }\n});\n\nconst App = () => {\n  return (\n    <ChakraProvider theme={theme}>\n      <Textarea />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n'))))}s.isMDXComponent=!0;const p={},d="Theming",m={unversionedId:"components/forms/textarea/theming",id:"components/forms/textarea/theming",title:"Theming",description:"The Textarea component is a single part component. All of the styling is applied directly to the textarea element.",source:"@site/content/docs/components/forms/textarea/theming.mdx",sourceDirName:"components/forms/textarea",slug:"/components/forms/textarea/theming",permalink:"/shenlanguage/docs/components/forms/textarea/theming",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Textarea",permalink:"/shenlanguage/docs/components/forms/textarea/"},next:{title:"Avatar",permalink:"/shenlanguage/docs/components/media-and-icons/avatar/"}},c={},u=[{value:"Theming properties",id:"theming-properties",level:2},{value:"Theming utilities",id:"theming-utilities",level:2},{value:"Customizing the default theme",id:"customizing-the-default-theme",level:2},{value:"Adding a custom size",id:"adding-a-custom-size",level:2},{value:"Adding a custom variant",id:"adding-a-custom-variant",level:2},{value:"Changing the default properties",id:"changing-the-default-properties",level:2},{value:"Showcase",id:"showcase",level:2}],h={toc:u};function f(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"theming"},"Theming"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Textarea")," component is a single part component. All of the styling is applied directly to the textarea element."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To learn more about styling single part components, visit the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/styled-system/theming/component-style#styling-single-part-components"},"Component Style"),"\npage.")),(0,r.kt)("h2",{id:"theming-properties"},"Theming properties"),(0,r.kt)("p",null,"The properties that affect the theming of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Textarea")," component are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"variant"),": The visual variant of the textarea. Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"outline"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size"),": The size of the textarea. Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"md"),".")),(0,r.kt)("h2",{id:"theming-utilities"},"Theming utilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"defineStyle"),": a function used to create style objects."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"defineStyleConfig"),": a function used to define the style configuration for a\nsingle part component.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { defineStyle, defineStyleConfig } from "@chakra-ui/react";\n')),(0,r.kt)("h2",{id:"customizing-the-default-theme"},"Customizing the default theme"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { defineStyle, defineStyleConfig } from "@chakra-ui/react";\n\nconst outline = defineStyle({\n  border: "2px dashed", // change the appearance of the border\n  borderRadius: 0, // remove the border radius\n  fontWeight: "semibold", // change the font weight\n});\n\nexport const textareaTheme = defineStyleConfig({\n  variants: { outline },\n});\n')),(0,r.kt)("p",null,"After the customization of the textarea theme, we can import it in our theme file and add\nit in the ",(0,r.kt)("inlineCode",{parentName:"p"},"components")," property:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { extendTheme } from "@chakra-ui/react";\nimport { textareaTheme } from "./components/textarea";\n\nexport const theme = extendTheme({\n  components: { Textarea: textareaTheme },\n});\n')),(0,r.kt)("h2",{id:"adding-a-custom-size"},"Adding a custom size"),(0,r.kt)("p",null,"Let's assume you want to add a custom size of your textarea. Here's how we can do that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { defineStyle, defineStyleConfig } from '@chakra-ui/react'\n\nconst xl = defineStyle({\n  fontSize: 'xl',\n  px: '6',\n  h: '16',\n  borderRadius: 'md',\n})\n\nexport const textareaTheme = defineStyleConfig({\n  sizes: { xl },\n})\n\n// Now we can use the new `xl` size\n<Textarea size=\"xl\">...</Textarea>\n")),(0,r.kt)("p",null,"Every time you're adding anything new to the theme, you'd need to run the CLI\ncommand to get proper autocomplete in your IDE. You can learn more about the CLI\ntool ",(0,r.kt)("a",{parentName:"p",href:"/docs/styled-system/cli"},"here"),"."),(0,r.kt)("h2",{id:"adding-a-custom-variant"},"Adding a custom variant"),(0,r.kt)("p",null,"Let's assume we want to include a custom branded variant. Here's how we can do\nthat:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { defineStyle, defineStyleConfig } from '@chakra-ui/react'\n\nconst brandPrimary = defineStyle({\n  background: 'orange.500',\n  color: 'white',\n  fontFamily: 'serif',\n  fontWeight: 'normal',\n\n  // let's also provide dark mode alternatives\n  _dark: {\n    background: 'orange.300',\n    color: 'orange.800',\n  }\n})\n\nexport const textareaTheme = defineStyleConfig({\n  variants: { brandPrimary },\n})\n\n// Now we can use the new `brandPrimary` variant\n<Textarea variant=\"brandPrimary\">...</Textarea>\n")),(0,r.kt)("h2",{id:"changing-the-default-properties"},"Changing the default properties"),(0,r.kt)("p",null,"Let's assume we want to change the default size or variant of\nevery textarea in our app. Here's how we can do that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { defineStyleConfig } from '@chakra-ui/react'\n\nexport const textareaTheme = defineStyleConfig({\n  defaultProps: {\n    size: 'lg',\n    variant: 'outline',\n    colorScheme: 'brand',\n  },\n})\n\n// This saves you time, instead of manually setting the size and\n// variant every time you use the textarea component:\n<Textarea size=\"lg\" variant=\"outline\">...</Textarea>\n")),(0,r.kt)("h2",{id:"showcase"},"Showcase"),(0,r.kt)(s,{mdxType:"Showcase"}))}f.isMDXComponent=!0}}]);