"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[5392],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},81821:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const r={},i="Stack",l={unversionedId:"components/layout/stack/index",id:"components/layout/stack/index",title:"Stack",description:"Stack is a layout component used to group elements together and apply a space",source:"@site/content/docs/components/layout/stack/index.mdx",sourceDirName:"components/layout/stack",slug:"/components/layout/stack/",permalink:"/docs/components/layout/stack/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675293453,formattedLastUpdatedAt:"Feb 1, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"SimpleGrid",permalink:"/docs/components/layout/simple-grid/"},next:{title:"Wrap",permalink:"/docs/components/layout/wrap/"}},s={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Responsive direction",id:"responsive-direction",level:3},{value:"Stack Dividers",id:"stack-dividers",level:3},{value:"Stack items horizontally",id:"stack-items-horizontally",level:3},{value:"Feature Cards with Stack Component",id:"feature-cards-with-stack-component",level:4},{value:"Feature Cards with HStack Component",id:"feature-cards-with-hstack-component",level:4},{value:"Notes on Stack vs Flex",id:"notes-on-stack-vs-flex",level:3},{value:"Props",id:"props",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},d=p("ComponentLinks"),u=p("PropsTable"),m={toc:c};function k(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"stack"},"Stack"),(0,o.kt)("p",null,"Stack is a layout component used to group elements together and apply a space\nbetween them."),(0,o.kt)(d,{github:{package:"layout"},npm:{package:"@chakra-ui/layout"},mdxType:"ComponentLinks"}),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { Stack, HStack, VStack } from "@chakra-ui/react";\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"VStack: used to stack elements in the vertical direction"),(0,o.kt)("li",{parentName:"ul"},"HStack: used to stack elements in the horizontal direction"),(0,o.kt)("li",{parentName:"ul"},"Stack: used to stack elements in the vertical or horizontal direction")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Stack uses a modified version of the\n",(0,o.kt)("a",{parentName:"p",href:"https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/"},"CSS lobotomized owl selector"),"\nto add spacing between its children."),(0,o.kt)("p",null,"To stack elements in horizontal or vertical direction only, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"HStack")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"VStack")," components. You can also use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Stack")," component as well and pass the\n",(0,o.kt)("inlineCode",{parentName:"p"},"direction")," prop."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<HStack spacing="24px">\n  <Box w="40px" h="40px" bg="yellow.200">\n    1\n  </Box>\n  <Box w="40px" h="40px" bg="tomato">\n    2\n  </Box>\n  <Box w="40px" h="40px" bg="pink.100">\n    3\n  </Box>\n</HStack>\n')),(0,o.kt)("h3",{id:"responsive-direction"},"Responsive direction"),(0,o.kt)("p",null,"You can pass responsive values to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Stack")," component to change stack\ndirection and/or spacing between elements."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Stack direction={["column", "row"]} spacing="24px">\n  <Box w="40px" h="40px" bg="yellow.200">\n    1\n  </Box>\n  <Box w="40px" h="40px" bg="tomato">\n    2\n  </Box>\n  <Box w="40px" h="40px" bg="pink.100">\n    3\n  </Box>\n</Stack>\n')),(0,o.kt)("h3",{id:"stack-dividers"},"Stack Dividers"),(0,o.kt)("p",null,"In some scenarios, you may want to add dividers between stacked elements. Pass\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"divider")," prop and set its value to the ",(0,o.kt)("inlineCode",{parentName:"p"},"StackDivider")," or any custom React\nelement."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'<VStack\n  divider={<StackDivider borderColor="gray.200" />}\n  spacing={4}\n  align="stretch"\n>\n  <Box h="40px" bg="yellow.200">\n    1\n  </Box>\n  <Box h="40px" bg="tomato">\n    2\n  </Box>\n  <Box h="40px" bg="pink.100">\n    3\n  </Box>\n</VStack>\n')),(0,o.kt)("h3",{id:"stack-items-horizontally"},"Stack items horizontally"),(0,o.kt)("p",null,"Pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"direction")," and set it to ",(0,o.kt)("inlineCode",{parentName:"p"},"row"),". Optionally, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"align")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"justify")," to adjust the alignment and distribution of the items."),(0,o.kt)("h4",{id:"feature-cards-with-stack-component"},"Feature Cards with Stack Component"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'function CustomStack() {\n  const Feature = ({ title, desc, ...rest }) => (\n    <Box p={5} shadow="md" borderWidth="1px" {...rest}>\n      <Heading fontSize="xl">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  );\n\n  return (\n    <Stack spacing={8} direction="row">\n      <Feature\n        title="Plan Money"\n        desc="The future can be even brighter but a goal without a plan is just a wish"\n      />\n      <Feature\n        title="Save Money"\n        desc="You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings on your own terms with our completely automated process"\n      />\n    </Stack>\n  );\n}\n')),(0,o.kt)("h4",{id:"feature-cards-with-hstack-component"},"Feature Cards with HStack Component"),(0,o.kt)("p",null,"In the example following, we can notice that for the ",(0,o.kt)("inlineCode",{parentName:"p"},"HStack")," component, we\ndon't need the direction props, since this component is specifically for\nhorizontally stacking items."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'function CustomStack() {\n  const Feature = ({ title, desc, ...rest }) => (\n    <Box p={5} shadow="md" borderWidth="1px" {...rest}>\n      <Heading fontSize="xl">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  );\n\n  return (\n    <HStack spacing={8}>\n      <Feature\n        title="Plan Money"\n        desc="The future can be even brighter but a goal without a plan is just a wish"\n      />\n      <Feature\n        title="Save Money"\n        desc="You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings on your own terms with our completely automated process"\n      />\n    </HStack>\n  );\n}\n')),(0,o.kt)("h3",{id:"notes-on-stack-vs-flex"},"Notes on Stack vs Flex"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Stack")," component and the ",(0,o.kt)("inlineCode",{parentName:"p"},"Flex")," component have their children spaced out\nevenly but the ",(0,o.kt)("strong",{parentName:"p"},"key")," difference is that the ",(0,o.kt)("inlineCode",{parentName:"p"},"Stack")," won't span the entire\nwidth of the container whereas the ",(0,o.kt)("inlineCode",{parentName:"p"},"Flex")," will. Another thing to note is that\nthe items in both ",(0,o.kt)("inlineCode",{parentName:"p"},"Stack")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Flex")," are aligned in the center by default."),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)(u,{of:"Stack",mdxType:"PropsTable"}))}k.isMDXComponent=!0}}]);