"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[5764],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return n?o.createElement(g,r(r({ref:t},p),{},{components:n})):o.createElement(g,r({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,r[1]=i;for(var c=2;c<l;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));const l={},r="Alert Dialog",i={unversionedId:"components/overlay/alert-dialog/index",id:"components/overlay/alert-dialog/index",title:"Alert Dialog",description:"AlertDialog component is used to interrupt the user with a mandatory confirmation",source:"@site/content/docs/components/overlay/alert-dialog/index.mdx",sourceDirName:"components/overlay/alert-dialog",slug:"/components/overlay/alert-dialog/",permalink:"/docs/components/overlay/alert-dialog/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675293453,formattedLastUpdatedAt:"Feb 1, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Transitions",permalink:"/docs/components/other/transitions/"},next:{title:"Theming",permalink:"/docs/components/overlay/alert-dialog/theming"}},s={},c=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Changing the transition",id:"changing-the-transition",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Props",id:"props",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=p("ComponentLinks"),u=p("PropsTable"),m={toc:c};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"alert-dialog"},"Alert Dialog"),(0,a.kt)("p",null,"AlertDialog component is used to interrupt the user with a mandatory confirmation\nor action."),(0,a.kt)(d,{github:{package:"modal"},npm:{package:"@chakra-ui/modal"},theme:{componentName:"modal"},mdxType:"ComponentLinks"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("p",null,"Chakra UI exports 7 alert dialog related components."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialog"),": provides context and state for the dialog."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogHeader"),": should contain the title announced by screen readers."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogBody"),": should contain the description announced by screen readers."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogFooter"),": should contain the actions of the dialog."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogOverlay"),": The dimmed overlay behind the dialog."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogContent"),": The wrapper for the alert dialog's content."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogCloseButton"),": The button that closes the dialog.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n} from "@chakra-ui/react";\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AlertDialog")," requires that you provide the ",(0,a.kt)("inlineCode",{parentName:"p"},"leastDestructiveRef")," prop."),(0,a.kt)("p",null,"Based on\n",(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/wai-aria-practices/#alertdialog"},"WAI-ARIA specifications"),",\nfocus should be placed on the least destructive element when the dialog opens,\nto prevent users from accidentally confirming the destructive action."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function AlertDialogExample() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef();\n\n  return (\n    <>\n      <Button colorScheme="red" onClick={onOpen}>\n        Delete Customer\n      </Button>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize="lg" fontWeight="bold">\n              Delete Customer\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure? You can\'t undo this action afterwards.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button colorScheme="red" onClick={onClose} ml={3}>\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n}\n')),(0,a.kt)("h3",{id:"changing-the-transition"},"Changing the transition"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Modal")," comes with a scale transition by default but you can change it by\npassing a ",(0,a.kt)("inlineCode",{parentName:"p"},"motionPreset")," prop, and set its value to either ",(0,a.kt)("inlineCode",{parentName:"p"},"slideInBottom"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"slideInRight"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"scale"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function TransitionExample() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef();\n\n  return (\n    <>\n      <Button onClick={onOpen}>Discard</Button>\n      <AlertDialog\n        motionPreset="slideInBottom"\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n      >\n        <AlertDialogOverlay />\n\n        <AlertDialogContent>\n          <AlertDialogHeader>Discard Changes?</AlertDialogHeader>\n          <AlertDialogCloseButton />\n          <AlertDialogBody>\n            Are you sure you want to discard all of your notes? 44 words will be\n            deleted.\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              No\n            </Button>\n            <Button colorScheme="red" ml={3}>\n              Yes\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n')),(0,a.kt)("h2",{id:"accessibility"},"Accessibility"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialog")," has role ",(0,a.kt)("inlineCode",{parentName:"li"},"alertdialog"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"aria-modal")," set to true."),(0,a.kt)("li",{parentName:"ul"},"When the dialog opens, focus is automatically set to the least destructive\nelement."),(0,a.kt)("li",{parentName:"ul"},"When the dialog opens, the content in the ",(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogHeader")," and\n",(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialogBody")," are announced by screen readers via ",(0,a.kt)("inlineCode",{parentName:"li"},"aria-labelledby")," and\n",(0,a.kt)("inlineCode",{parentName:"li"},"aria-describedby")," attributes."),(0,a.kt)("li",{parentName:"ul"},"Clicking on the overlay closes the ",(0,a.kt)("inlineCode",{parentName:"li"},"AlertDialog"),"."),(0,a.kt)("li",{parentName:"ul"},"Pressing ",(0,a.kt)("kbd",null,"esc")," closes the dialog.")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AlertDialog")," and its components compose the ",(0,a.kt)("inlineCode",{parentName:"p"},"Modal")," component. The only\nexception is that it requires a ",(0,a.kt)("inlineCode",{parentName:"p"},"leastDestructiveRef")," which is similar to the\n",(0,a.kt)("inlineCode",{parentName:"p"},"initialFocusRef")," of ",(0,a.kt)("inlineCode",{parentName:"p"},"Modal"),"."),(0,a.kt)(u,{of:"AlertDialog",mdxType:"PropsTable"}))}g.isMDXComponent=!0}}]);