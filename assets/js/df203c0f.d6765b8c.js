"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[9924],{40491:(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});s(67294);var l=s(86010),a=s(39960),r=s(88824),n=s(10833),c=s(35281),o=s(95999),i=s(11236),u=s(90197),g=s(85893);function d(e){let{doc:t}=e;return(0,g.jsxs)("article",{className:"margin-vert--lg",children:[(0,g.jsx)(a.Z,{to:t.permalink,children:(0,g.jsx)("h2",{children:t.title})}),t.description&&(0,g.jsx)("p",{children:t.description})]})}function h(e){let{tag:t}=e;const s=function(){const{selectMessage:e}=(0,r.c)();return t=>e(t,(0,o.I)({id:"theme.docs.tagDocListPageTitle.nDocsTagged",description:'Pluralized label for "{count} docs tagged". Use as much plural forms (separated by "|") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',message:"One doc tagged|{count} docs tagged"},{count:t}))}(),h=(0,o.I)({id:"theme.docs.tagDocListPageTitle",description:"The title of the page for a docs tag",message:'{nDocsTagged} with "{tagName}"'},{nDocsTagged:s(t.count),tagName:t.label});return(0,g.jsxs)(n.FG,{className:(0,l.Z)(c.k.wrapper.docsPages,c.k.page.docsTagDocListPage),children:[(0,g.jsx)(n.d,{title:h}),(0,g.jsx)(u.Z,{tag:"doc_tag_doc_list"}),(0,g.jsx)(i.Z,{children:(0,g.jsx)("div",{className:"container margin-vert--lg",children:(0,g.jsx)("div",{className:"row",children:(0,g.jsxs)("main",{className:"col col--8 col--offset-2",children:[(0,g.jsxs)("header",{className:"margin-bottom--xl",children:[(0,g.jsx)("h1",{children:h}),(0,g.jsx)(a.Z,{href:t.allTagsPath,children:(0,g.jsx)(o.Z,{id:"theme.tags.tagsPageLink",description:"The label of the link targeting the tag list page",children:"View All Tags"})})]}),(0,g.jsx)("section",{className:"margin-vert--lg",children:t.items.map((e=>(0,g.jsx)(d,{doc:e},e.id)))})]})})})})]})}},88824:(e,t,s)=>{s.d(t,{c:()=>i});var l=s(67294),a=s(52263);const r=["zero","one","two","few","many","other"];function n(e){return r.filter((t=>e.includes(t)))}const c={locale:"en",pluralForms:n(["one","other"]),select:e=>1===e?"one":"other"};function o(){const{i18n:{currentLocale:e}}=(0,a.Z)();return(0,l.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:n(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),c}}),[e])}function i(){const e=o();return{selectMessage:(t,s)=>function(e,t,s){const l=e.split("|");if(1===l.length)return l[0];l.length>s.pluralForms.length&&console.error(`For locale=${s.locale}, a maximum of ${s.pluralForms.length} plural forms are expected (${s.pluralForms.join(",")}), but the message contains ${l.length}: ${e}`);const a=s.select(t),r=s.pluralForms.indexOf(a);return l[Math.min(r,l.length-1)]}(s,t,e)}}}}]);