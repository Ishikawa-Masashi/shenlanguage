"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[2821],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),s=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(i.Provider,{value:n},e.children)},k="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),k=s(t),d=a,m=k["".concat(i,".").concat(d)]||k[d]||h[d]||r;return t?o.createElement(m,c(c({ref:n},p),{},{components:t})):o.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[k]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<r;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7564:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=t(87462),a=(t(67294),t(3905));const r={},c="Checkbox",l={unversionedId:"components/forms/checkbox/index",id:"components/forms/checkbox/index",title:"Checkbox",description:"Checkbox component is used in forms when a user needs to select multiple",source:"@site/content/docs/components/forms/checkbox/index.mdx",sourceDirName:"components/forms/checkbox",slug:"/components/forms/checkbox/",permalink:"/docs/components/forms/checkbox/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675293453,formattedLastUpdatedAt:"Feb 1, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Theming",permalink:"/docs/components/forms/button/theming"},next:{title:"Theming",permalink:"/docs/components/forms/checkbox/theming"}},i={},s=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Disabled Checkbox",id:"disabled-checkbox",level:3},{value:"Checkbox with custom color",id:"checkbox-with-custom-color",level:3},{value:"Checkbox sizes",id:"checkbox-sizes",level:3},{value:"Invalid Checkbox",id:"invalid-checkbox",level:3},{value:"Changing the spacing",id:"changing-the-spacing",level:3},{value:"Changing the icon color and size",id:"changing-the-icon-color-and-size",level:3},{value:"Indeterminate",id:"indeterminate",level:3},{value:"Icon",id:"icon",level:3},{value:"CheckboxGroup",id:"checkboxgroup",level:3},{value:"Hooks",id:"hooks",level:3},{value:"Props",id:"props",level:2},{value:"Checkbox Props",id:"checkbox-props",level:3},{value:"CheckboxGroup Props",id:"checkboxgroup-props",level:3},{value:"Shared Style Props",id:"shared-style-props",level:4}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)},k=p("ComponentLinks"),h=p("PropsTable"),d={toc:s};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"checkbox"},"Checkbox"),(0,a.kt)("p",null,"Checkbox component is used in forms when a user needs to select multiple\nvalues from several options."),(0,a.kt)(k,{github:{package:"checkbox"},npm:{package:"@chakra-ui/checkbox"},theme:{componentName:"checkbox"},mdxType:"ComponentLinks"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { Checkbox, CheckboxGroup } from "@chakra-ui/react";\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Checkbox defaultChecked>Checkbox</Checkbox>\n")),(0,a.kt)("h3",{id:"disabled-checkbox"},"Disabled Checkbox"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Stack spacing={5} direction="row">\n  <Checkbox isDisabled>Checkbox</Checkbox>\n  <Checkbox isDisabled defaultChecked>\n    Checkbox\n  </Checkbox>\n</Stack>\n')),(0,a.kt)("h3",{id:"checkbox-with-custom-color"},"Checkbox with custom color"),(0,a.kt)("p",null,"You can override the color scheme of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Checkbox")," to any color key specified\nin ",(0,a.kt)("inlineCode",{parentName:"p"},"theme.colors"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Stack spacing={5} direction="row">\n  <Checkbox colorScheme="red" defaultChecked>\n    Checkbox\n  </Checkbox>\n  <Checkbox colorScheme="green" defaultChecked>\n    Checkbox\n  </Checkbox>\n</Stack>\n')),(0,a.kt)("h3",{id:"checkbox-sizes"},"Checkbox sizes"),(0,a.kt)("p",null,"Pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"size")," prop to change the size of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Checkbox"),". Values can be either\n",(0,a.kt)("inlineCode",{parentName:"p"},"sm"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"md")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"lg"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Stack spacing={[1, 5]} direction={["column", "row"]}>\n  <Checkbox size="sm" colorScheme="red">\n    Checkbox\n  </Checkbox>\n  <Checkbox size="md" colorScheme="green" defaultChecked>\n    Checkbox\n  </Checkbox>\n  <Checkbox size="lg" colorScheme="orange" defaultChecked>\n    Checkbox\n  </Checkbox>\n</Stack>\n')),(0,a.kt)("h3",{id:"invalid-checkbox"},"Invalid Checkbox"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Checkbox isInvalid>Checkbox</Checkbox>\n")),(0,a.kt)("h3",{id:"changing-the-spacing"},"Changing the spacing"),(0,a.kt)("p",null,"We added the ",(0,a.kt)("inlineCode",{parentName:"p"},"spacing")," prop to customize the spacing between the ",(0,a.kt)("inlineCode",{parentName:"p"},"Checkbox")," and\nlabel text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Checkbox spacing="1rem">Option</Checkbox>\n')),(0,a.kt)("h3",{id:"changing-the-icon-color-and-size"},"Changing the icon color and size"),(0,a.kt)("p",null,"You can customize the color and size of the check icon by passing the\n",(0,a.kt)("inlineCode",{parentName:"p"},"iconColor")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"iconSize")," prop."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Checkbox iconColor="blue.400" iconSize="1rem">\n  Option\n</Checkbox>\n')),(0,a.kt)("h3",{id:"indeterminate"},"Indeterminate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function IndeterminateExample() {\n  const [checkedItems, setCheckedItems] = React.useState([false, false]);\n\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked;\n\n  return (\n    <>\n      <Checkbox\n        isChecked={allChecked}\n        isIndeterminate={isIndeterminate}\n        onChange={(e) => setCheckedItems([e.target.checked, e.target.checked])}\n      >\n        Parent Checkbox\n      </Checkbox>\n      <Stack pl={6} mt={1} spacing={1}>\n        <Checkbox\n          isChecked={checkedItems[0]}\n          onChange={(e) => setCheckedItems([e.target.checked, checkedItems[1]])}\n        >\n          Child Checkbox 1\n        </Checkbox>\n        <Checkbox\n          isChecked={checkedItems[1]}\n          onChange={(e) => setCheckedItems([checkedItems[0], e.target.checked])}\n        >\n          Child Checkbox 2\n        </Checkbox>\n      </Stack>\n    </>\n  );\n}\n")),(0,a.kt)("h3",{id:"icon"},"Icon"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"manual=true",manual:"true"},'/**\n * 1. Create a custom icon that accepts 2 props: `isIndeterminate` and `isChecked`\n */\nfunction CustomIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n\n  const d = isIndeterminate\n    ? "M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm0,19a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,12,19Zm1.6-6.08a1,1,0,0,0-.6.917,1,1,0,1,1-2,0,3,3,0,0,1,1.8-2.75A2,2,0,1,0,10,9.255a1,1,0,1,1-2,0,4,4,0,1,1,5.6,3.666Z"\n    : "M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z";\n\n  return (\n    <Icon viewBox="0 0 24 24" {...rest}>\n      <path fill="currentColor" d={d} />\n    </Icon>\n  );\n}\n\nfunction CustomCheckbox() {\n  return (\n    <Checkbox icon={<CustomIcon />} colorScheme="cyan">\n      Hello world\n    </Checkbox>\n  );\n}\n\nrender(<CustomCheckbox />);\n')),(0,a.kt)("h3",{id:"checkboxgroup"},"CheckboxGroup"),(0,a.kt)("p",null,"Chakra exports a ",(0,a.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," component to help manage the checked state of\nits children ",(0,a.kt)("inlineCode",{parentName:"p"},"Checkbox")," components and conveniently pass a few shared style\nprops to each. See the props table at the bottom of this page for a list of the\nshared styling props."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup colorScheme="green" defaultValue={["naruto", "kakashi"]}>\n  <Stack spacing={[1, 5]} direction={["column", "row"]}>\n    <Checkbox value="naruto">Naruto</Checkbox>\n    <Checkbox value="sasuke">Sasuke</Checkbox>\n    <Checkbox value="kakashi">Kakashi</Checkbox>\n  </Stack>\n</CheckboxGroup>\n')),(0,a.kt)("h3",{id:"hooks"},"Hooks"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useCheckbox")," hook is exported with state and focus management logic for use\nin creating tailor-made checkbox component for your application. Read more about\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"useCheckbox")," hook ",(0,a.kt)("a",{parentName:"p",href:"/docs/hooks/use-checkbox"},"here"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useCheckboxGroup")," hook is exported with state management logic for use in\ncreating tailor-made checkbox group component for your application. Read more\nabout the ",(0,a.kt)("inlineCode",{parentName:"p"},"useCheckboxGroup")," hook\n",(0,a.kt)("a",{parentName:"p",href:"/docs/hooks/use-checkbox-group"},"here"),"."),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h3",{id:"checkbox-props"},"Checkbox Props"),(0,a.kt)(h,{of:"Checkbox",mdxType:"PropsTable"}),(0,a.kt)("h3",{id:"checkboxgroup-props"},"CheckboxGroup Props"),(0,a.kt)(h,{of:"CheckboxGroup",mdxType:"PropsTable"}),(0,a.kt)("h4",{id:"shared-style-props"},"Shared Style Props"),(0,a.kt)("p",null,"The following style props can be set on ",(0,a.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," and they will be\nforwarded to all children ",(0,a.kt)("inlineCode",{parentName:"p"},"Checkbox")," components."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"colorScheme"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},'The color of the checkbox when it is checked. This should be one of the color keys in the theme (e.g."green", "red").')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"React.ReactNode")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"The content of the checkbox group.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"size"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"sm"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"md"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"lg")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"md")),(0,a.kt)("td",{parentName:"tr",align:null},"The size of the checkbox.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"variant"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"variant")," of the checkbox.")))))}m.isMDXComponent=!0}}]);