"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[4259],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},93373:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const l={},i="Flex",o={unversionedId:"components/layout/flex/index",id:"components/layout/flex/index",title:"Flex",description:"Flex is Box with display set to flex and comes with helpful style shorthand.",source:"@site/content/docs/components/layout/flex/index.mdx",sourceDirName:"components/layout/flex",slug:"/components/layout/flex/",permalink:"/docs/components/layout/flex/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Theming",permalink:"/docs/components/layout/container/theming"},next:{title:"Grid",permalink:"/docs/components/layout/grid/"}},p={},s=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Using the Spacer",id:"using-the-spacer",level:3},{value:"Flex and Spacer vs Grid vs Stack",id:"flex-and-spacer-vs-grid-vs-stack",level:3},{value:"Props",id:"props",level:2}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},d=c("ComponentLinks"),u=c("PropsTable"),m={toc:s};function h(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"flex"},"Flex"),(0,r.kt)("p",null,"Flex is Box with display set to flex and comes with helpful style shorthand.\nIt renders a ",(0,r.kt)("inlineCode",{parentName:"p"},"div")," element."),(0,r.kt)(d,{github:{package:"layout"},npm:{package:"@chakra-ui/layout"},mdxType:"ComponentLinks"}),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Flex, Spacer } from "@chakra-ui/react";\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Flex:")," A ",(0,r.kt)("inlineCode",{parentName:"li"},"Box")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"display: flex"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spacer:")," Creates an adjustable, empty space that can be used to tune the\nspacing between child elements within ",(0,r.kt)("inlineCode",{parentName:"li"},"Flex"),".")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Using the Flex components, here are some helpful shorthand props:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flexDirection")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"direction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flexWrap")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"wrap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flexBasis")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"basis")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flexGrow")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"grow")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flexShrink")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"shrink")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"alignItems")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"align")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"justifyContent")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"justify"))),(0,r.kt)("p",null,"While you can pass the verbose props, using the shorthand can save you some\ntime."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'<Flex color="white">\n  <Center w="100px" bg="green.500">\n    <Text>Box 1</Text>\n  </Center>\n  <Square bg="blue.500" size="150px">\n    <Text>Box 2</Text>\n  </Square>\n  <Box flex="1" bg="tomato">\n    <Text>Box 3</Text>\n  </Box>\n</Flex>\n')),(0,r.kt)("h3",{id:"using-the-spacer"},"Using the Spacer"),(0,r.kt)("p",null,"As an alternative to ",(0,r.kt)("inlineCode",{parentName:"p"},"Stack"),", you can combine ",(0,r.kt)("inlineCode",{parentName:"p"},"Flex")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Spacer")," to create\nstackable and responsive layouts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Flex>\n  <Box p="4" bg="red.400">\n    Box 1\n  </Box>\n  <Spacer />\n  <Box p="4" bg="green.400">\n    Box 2\n  </Box>\n</Flex>\n')),(0,r.kt)("h3",{id:"flex-and-spacer-vs-grid-vs-stack"},"Flex and Spacer vs Grid vs Stack"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Flex")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Spacer")," components, ",(0,r.kt)("inlineCode",{parentName:"p"},"Grid")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"HStack")," treat children of\ndifferent widths differently."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"HStack"),", the children will have equal spacing between them but they won't\nspan the entire width of the container."),(0,r.kt)("li",{parentName:"ul"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"Grid"),", the starting points of the children will be equally spaced but the\ngaps between them will not be equal."),(0,r.kt)("li",{parentName:"ul"},"With ",(0,r.kt)("inlineCode",{parentName:"li"},"Flex")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Spacer"),", the children will span the entire width of the\ncontainer and also have equal spacing between them.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live lg",live:!0,lg:!0},'<Box>\n  <Text>Flex and Spacer: Full width, equal Spacing</Text>\n  <Flex>\n    <Box w="70px" h="10" bg="red.500" />\n    <Spacer />\n    <Box w="170px" h="10" bg="red.500" />\n    <Spacer />\n    <Box w="180px" h="10" bg="red.500" />\n  </Flex>\n\n  <Text>\n    Grid: The children start at the beginning, the 1/3 mark and 2/3 mark\n  </Text>\n  <Grid templateColumns="repeat(3, 1fr)" gap={6}>\n    <Box w="70px" h="10" bg="blue.500" />\n    <Box w="170px" h="10" bg="blue.500" />\n    <Box w="180px" h="10" bg="blue.500" />\n  </Grid>\n\n  <Text>\n    HStack: The children have equal spacing but don\'t span the whole container\n  </Text>\n  <HStack spacing="24px">\n    <Box w="70px" h="10" bg="teal.500" />\n    <Box w="170px" h="10" bg="teal.500" />\n    <Box w="180px" h="10" bg="teal.500" />\n  </HStack>\n</Box>\n')),(0,r.kt)("p",null,"A good use case for ",(0,r.kt)("inlineCode",{parentName:"p"},"Spacer")," is to create a navbar with a signup/login button\naligned to the right."),(0,r.kt)("p",null,"Since ",(0,r.kt)("inlineCode",{parentName:"p"},"Spacer")," renders a ",(0,r.kt)("inlineCode",{parentName:"p"},"div"),", any ",(0,r.kt)("inlineCode",{parentName:"p"},"gap")," value provided to the parent is\napplied to both sides of this component, and therefore make the gap appear\ndoubled when the spacer is completely collapsed."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The example below is not responsive on purpose as you might switch to a\ncollapsed menu on mobile.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live sm",live:!0,sm:!0},'<Flex minWidth="max-content" alignItems="center" gap="2">\n  <Box p="2">\n    <Heading size="md">Chakra App</Heading>\n  </Box>\n  <Spacer />\n  <ButtonGroup gap="2">\n    <Button colorScheme="teal">Sign Up</Button>\n    <Button colorScheme="teal">Log in</Button>\n  </ButtonGroup>\n</Flex>\n')),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)(u,{of:"Flex",mdxType:"PropsTable"}))}h.isMDXComponent=!0}}]);