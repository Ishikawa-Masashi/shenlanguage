"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[8373],{3905:(e,n,l)=>{l.d(n,{Zo:()=>p,kt:()=>m});var r=l(67294);function t(e,n,l){return n in e?Object.defineProperty(e,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[n]=l,e}function a(e,n){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),l.push.apply(l,r)}return l}function i(e){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?a(Object(l),!0).forEach((function(n){t(e,n,l[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(l,n))}))}return e}function o(e,n){if(null==e)return{};var l,r,t=function(e,n){if(null==e)return{};var l,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)l=a[r],n.indexOf(l)>=0||(t[l]=e[l]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)l=a[r],n.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(t[l]=e[l])}return t}var s=r.createContext({}),d=function(e){var n=r.useContext(s),l=n;return e&&(l="function"==typeof e?e(n):i(i({},n),e)),l},p=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var l=e.components,t=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(l),m=t,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return l?r.createElement(h,i(i({ref:n},p),{},{components:l})):r.createElement(h,i({ref:n},p))}));function m(e,n){var l=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=l.length,i=new Array(a);i[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:t,i[1]=o;for(var d=2;d<a;d++)i[d]=l[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,l)}u.displayName="MDXCreateElement"},18034:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=l(87462),t=(l(67294),l(3905));const a={},i="Slider",o={unversionedId:"components/forms/slider/index",id:"components/forms/slider/index",title:"Slider",description:"The Slider is used to allow users to make selections from a range of values.",source:"@site/content/docs/components/forms/slider/index.mdx",sourceDirName:"components/forms/slider",slug:"/components/forms/slider/",permalink:"/docs/components/forms/slider/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Theming",permalink:"/docs/components/forms/select/theming"},next:{title:"Theming",permalink:"/docs/components/forms/slider/theming"}},s={},d=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Changing the slider color scheme",id:"changing-the-slider-color-scheme",level:3},{value:"Changing the slider orientation",id:"changing-the-slider-orientation",level:3},{value:"Customizing the Slider",id:"customizing-the-slider",level:3},{value:"Discrete Sliders",id:"discrete-sliders",level:3},{value:"Slider with custom labels and marks",id:"slider-with-custom-labels-and-marks",level:3},{value:"Getting the final value when dragging the slider",id:"getting-the-final-value-when-dragging-the-slider",level:3},{value:"Configure thumb focus with <code>focusThumbOnChange</code>",id:"configure-thumb-focus-with-focusthumbonchange",level:3},{value:"useSlider",id:"useslider",level:3},{value:"Props",id:"props",level:2},{value:"Slider Props",id:"slider-props",level:3},{value:"SliderThumb Props",id:"sliderthumb-props",level:3},{value:"SliderFilledTrack Props",id:"sliderfilledtrack-props",level:3},{value:"SliderTrack Props",id:"slidertrack-props",level:3}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,t.kt)("div",n)},c=p("ComponentLinks"),u=p("PropsTable"),m={toc:d};function h(e){let{components:n,...l}=e;return(0,t.kt)("wrapper",(0,r.Z)({},m,l,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"slider"},"Slider"),(0,t.kt)("p",null,"The Slider is used to allow users to make selections from a range of values."),(0,t.kt)(c,{github:{package:"slider"},npm:{package:"@chakra-ui/slider"},theme:{componentName:"slider"},mdxType:"ComponentLinks"}),(0,t.kt)("h2",{id:"import"},"Import"),(0,t.kt)("p",null,"Chakra UI exports 5 components for Slider:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"Slider")),": The wrapper that provides context and functionality for all\nchildren."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"SliderTrack")),": The empty part of the slider that shows the track."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"SliderFilledTrack")),": The filled part of the slider."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"SliderThumb")),": The handle that's used to change the slider value."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"SliderMark")),": The label or mark that shows names for specific slider\nvalues")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'import {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  SliderMark,\n} from "@chakra-ui/react";\n')),(0,t.kt)("h2",{id:"usage"},"Usage"),(0,t.kt)("p",null,"Sliders reflect a range of values along a bar, from which users may select a\nsingle value. They are ideal for adjusting settings such as volume, brightness,\nor applying image filters."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},(0,t.kt)("strong",{parentName:"p"},"Note:")," We recommend adding a ",(0,t.kt)("inlineCode",{parentName:"p"},"aria-label")," or ",(0,t.kt)("inlineCode",{parentName:"p"},"aria-labelledby")," prop to\nprovide an accessible label for the Slider.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Slider aria-label="slider-ex-1" defaultValue={30}>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n')),(0,t.kt)("h3",{id:"changing-the-slider-color-scheme"},"Changing the slider color scheme"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Slider aria-label="slider-ex-2" colorScheme="pink" defaultValue={30}>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n')),(0,t.kt)("h3",{id:"changing-the-slider-orientation"},"Changing the slider orientation"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Slider\n  aria-label="slider-ex-3"\n  defaultValue={30}\n  orientation="vertical"\n  minH="32"\n>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n')),(0,t.kt)("h3",{id:"customizing-the-slider"},"Customizing the Slider"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"Slider")," component was designed to be composed to make it easy for you to\ncustomize its styles."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Slider aria-label="slider-ex-4" defaultValue={30}>\n  <SliderTrack bg="red.100">\n    <SliderFilledTrack bg="tomato" />\n  </SliderTrack>\n  <SliderThumb boxSize={6}>\n    <Box color="tomato" as={MdGraphicEq} />\n  </SliderThumb>\n</Slider>\n')),(0,t.kt)("h3",{id:"discrete-sliders"},"Discrete Sliders"),(0,t.kt)("p",null,"Discrete sliders allow you to snap to predefined sets of values. This can be\naccomplished using the ",(0,t.kt)("inlineCode",{parentName:"p"},"step")," prop."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Slider defaultValue={60} min={0} max={300} step={30}>\n  <SliderTrack bg="red.100">\n    <Box position="relative" right={10} />\n    <SliderFilledTrack bg="tomato" />\n  </SliderTrack>\n  <SliderThumb boxSize={6} />\n</Slider>\n')),(0,t.kt)("h3",{id:"slider-with-custom-labels-and-marks"},"Slider with custom labels and marks"),(0,t.kt)("p",null,"You can have custom labels and marks by using ",(0,t.kt)("inlineCode",{parentName:"p"},"SliderMark")," component"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},'function SliderMarkExample() {\n  const [sliderValue, setSliderValue] = useState(50);\n\n  const labelStyles = {\n    mt: "2",\n    ml: "-2.5",\n    fontSize: "sm",\n  };\n\n  return (\n    <Box pt={6} pb={2}>\n      <Slider aria-label="slider-ex-6" onChange={(val) => setSliderValue(val)}>\n        <SliderMark value={25} {...labelStyles}>\n          25%\n        </SliderMark>\n        <SliderMark value={50} {...labelStyles}>\n          50%\n        </SliderMark>\n        <SliderMark value={75} {...labelStyles}>\n          75%\n        </SliderMark>\n        <SliderMark\n          value={sliderValue}\n          textAlign="center"\n          bg="blue.500"\n          color="white"\n          mt="-10"\n          ml="-5"\n          w="12"\n        >\n          {sliderValue}%\n        </SliderMark>\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Box>\n  );\n}\n')),(0,t.kt)("p",null,"And you can also use ",(0,t.kt)("inlineCode",{parentName:"p"},"Tooltip")," with ",(0,t.kt)("inlineCode",{parentName:"p"},"SliderThumb")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},'function SliderThumbWithTooltip() {\n  const [sliderValue, setSliderValue] = React.useState(5);\n  const [showTooltip, setShowTooltip] = React.useState(false);\n  return (\n    <Slider\n      id="slider"\n      defaultValue={5}\n      min={0}\n      max={100}\n      colorScheme="teal"\n      onChange={(v) => setSliderValue(v)}\n      onMouseEnter={() => setShowTooltip(true)}\n      onMouseLeave={() => setShowTooltip(false)}\n    >\n      <SliderMark value={25} mt="1" ml="-2.5" fontSize="sm">\n        25%\n      </SliderMark>\n      <SliderMark value={50} mt="1" ml="-2.5" fontSize="sm">\n        50%\n      </SliderMark>\n      <SliderMark value={75} mt="1" ml="-2.5" fontSize="sm">\n        75%\n      </SliderMark>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <Tooltip\n        hasArrow\n        bg="teal.500"\n        color="white"\n        placement="top"\n        isOpen={showTooltip}\n        label={`${sliderValue}%`}\n      >\n        <SliderThumb />\n      </Tooltip>\n    </Slider>\n  );\n}\n')),(0,t.kt)("h3",{id:"getting-the-final-value-when-dragging-the-slider"},"Getting the final value when dragging the slider"),(0,t.kt)("p",null,"Dragging the slider can trigger lots of updates and the user might only be\ninterested in the final result after sliding is complete. You can use\n",(0,t.kt)("inlineCode",{parentName:"p"},"onChangeEnd")," for this."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},'<Slider aria-label="slider-ex-5" onChangeEnd={(val) => console.log(val)}>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n')),(0,t.kt)("h3",{id:"configure-thumb-focus-with-focusthumbonchange"},"Configure thumb focus with ",(0,t.kt)("inlineCode",{parentName:"h3"},"focusThumbOnChange")),(0,t.kt)("p",null,"By default ",(0,t.kt)("inlineCode",{parentName:"p"},"SliderThumb")," will receive focus whenever ",(0,t.kt)("inlineCode",{parentName:"p"},"value")," changes. You can\nopt-out of this behavior by setting the value of ",(0,t.kt)("inlineCode",{parentName:"p"},"focusThumbOnChange")," to\n",(0,t.kt)("inlineCode",{parentName:"p"},"false"),'. This is normally used with a "controlled" slider value.'),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},'<Slider aria-label="slider-ex-5" value={value} focusThumbOnChange={false}>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n')),(0,t.kt)("h3",{id:"useslider"},"useSlider"),(0,t.kt)("p",null,"We've exported the ",(0,t.kt)("inlineCode",{parentName:"p"},"useSlider")," hook to help users manage and build custom slider\nUIs."),(0,t.kt)("h2",{id:"props"},"Props"),(0,t.kt)("h3",{id:"slider-props"},"Slider Props"),(0,t.kt)("p",null,"The ",(0,t.kt)("inlineCode",{parentName:"p"},"Slider")," component wraps all its children in the ",(0,t.kt)("a",{parentName:"p",href:"/docs/components/layout/box"},"Box"),"\ncomponent, so you can pass all ",(0,t.kt)("inlineCode",{parentName:"p"},"Box")," props to change its style."),(0,t.kt)(u,{of:"Slider",mdxType:"PropsTable"}),(0,t.kt)("h3",{id:"sliderthumb-props"},"SliderThumb Props"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SliderThumb")," composes ",(0,t.kt)("a",{parentName:"p",href:"/docs/components/layout/box"},"Box")," so you can pass all ",(0,t.kt)("inlineCode",{parentName:"p"},"Box")," props\nto change its style."),(0,t.kt)("h3",{id:"sliderfilledtrack-props"},"SliderFilledTrack Props"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SliderFilledTrack")," composes ",(0,t.kt)("a",{parentName:"p",href:"/docs/components/layout/box"},"Box")," so you can pass all ",(0,t.kt)("inlineCode",{parentName:"p"},"Box"),"\nprops to change its style."),(0,t.kt)("h3",{id:"slidertrack-props"},"SliderTrack Props"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"SliderTrack")," composes ",(0,t.kt)("a",{parentName:"p",href:"/docs/components/layout/box"},"Box")," so you can pass all ",(0,t.kt)("inlineCode",{parentName:"p"},"Box")," props\nto change its style."))}h.isMDXComponent=!0}}]);