"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[1890],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=s,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(87462),s=(n(67294),n(3905));const o={title:"The `sx` Prop",description:"The sx prop lets you style components inline, using your theme tokens.",category:"features"},a=void 0,i={unversionedId:"styled-system/the-sx-prop",id:"styled-system/the-sx-prop",title:"The `sx` Prop",description:"The sx prop lets you style components inline, using your theme tokens.",source:"@site/content/docs/styled-system/the-sx-prop.mdx",sourceDirName:"styled-system",slug:"/styled-system/the-sx-prop",permalink:"/shenlanguage/docs/styled-system/the-sx-prop",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{title:"The `sx` Prop",description:"The sx prop lets you style components inline, using your theme tokens.",category:"features"},sidebar:"defaultSidebar",previous:{title:"Text and Layer Styles",permalink:"/shenlanguage/docs/styled-system/text-and-layer-styles"},next:{title:"Default Theme",permalink:"/shenlanguage/docs/styled-system/theming/default-theme"}},p={},l=[{value:"Use cases",id:"use-cases",level:2},{value:"Defining Any Standard CSS Property",id:"defining-any-standard-css-property",level:3},{value:"Defining CSS Custom Properties",id:"defining-css-custom-properties",level:3},{value:"Creating Nested Selectors",id:"creating-nested-selectors",level:3},{value:"Custom Media queries",id:"custom-media-queries",level:3}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"With ",(0,s.kt)("inlineCode",{parentName:"p"},"sx")," you can provide any valid CSS to an element and utilize tokens from\nyour theme to ensure consistency and that you are utilizing constraint-based\ndesign principles when styling your application."),(0,s.kt)("p",null,"This prop provides a superset of CSS (contains all CSS properties/selectors in\naddition to custom ones) that maps values directly from the theme, depending on\nthe CSS property used. Also, it allows a simple way of defining responsive\nvalues that correspond to the breakpoints defined in the theme."),(0,s.kt)("p",null,"To find out which properties are theme-aware, see the\n",(0,s.kt)("a",{parentName:"p",href:"/docs/styled-system/style-props"},"Style Props"),"."),(0,s.kt)("h2",{id:"use-cases"},"Use cases"),(0,s.kt)("p",null,"Although the ",(0,s.kt)("inlineCode",{parentName:"p"},"sx")," prop is considered an escape hatch, there are few cases where\nit is needed."),(0,s.kt)("h3",{id:"defining-any-standard-css-property"},"Defining Any Standard CSS Property"),(0,s.kt)("p",null,"In case you need to set a CSS property that is not listed in the\n",(0,s.kt)("a",{parentName:"p",href:"/docs/styled-system/style-props"},"Style Props")," list, you can use the\n",(0,s.kt)("inlineCode",{parentName:"p"},"sx")," prop and pass it whatever CSS property you desire."),(0,s.kt)("p",null,"One such example is the ",(0,s.kt)("inlineCode",{parentName:"p"},"filter")," property:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"<Image\n  src='http://placekitten.com/200/300'\n  alt='a kitten'\n  sx={{ filter: 'blur(8px)' }}\n/>\n")),(0,s.kt)("h3",{id:"defining-css-custom-properties"},"Defining CSS Custom Properties"),(0,s.kt)("p",null,"Custom CSS properties can be defined via the ",(0,s.kt)("inlineCode",{parentName:"p"},"sx")," prop as well:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"<Box sx={{ '--my-color': '#53c8c4' }}>\n  <Heading color='var(--my-color)' size='lg'>\n    This uses CSS Custom Properties!\n  </Heading>\n</Box>\n")),(0,s.kt)("h3",{id:"creating-nested-selectors"},"Creating Nested Selectors"),(0,s.kt)("p",null,"To create complex, nested selectors, you can use utilize the ",(0,s.kt)("inlineCode",{parentName:"p"},"&")," operator. The\n",(0,s.kt)("inlineCode",{parentName:"p"},"&")," in selector will get resolved to unique ",(0,s.kt)("inlineCode",{parentName:"p"},"className")," that is assigned the\ncomponent you put ",(0,s.kt)("inlineCode",{parentName:"p"},"sx")," on."),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"For the following example you could also use the\n",(0,s.kt)("a",{parentName:"p",href:"/docs/styled-system/style-props#pseudo"},(0,s.kt)("inlineCode",{parentName:"a"},"_groupHover")," shorthand prop"),".")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"<Box borderWidth={2} borderColor='purple.500' p={5} className='my-box'>\n  <Heading size='lg'>\n    Hover the box...\n    <Box\n      as='span'\n      color='red.500'\n      sx={{\n        '.my-box:hover &': {\n          color: 'green.500',\n        },\n      }}\n    >\n      And I will turn green!\n    </Box>\n  </Heading>\n</Box>\n")),(0,s.kt)("h3",{id:"custom-media-queries"},"Custom Media queries"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"<Box\n  sx={{\n    '@media print': {\n      display: 'none',\n    },\n  }}\n>\n  This text won't be shown when printing this page.\n</Box>\n")))}d.isMDXComponent=!0}}]);