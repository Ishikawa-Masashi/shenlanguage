"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[6631],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>d});var o=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=o.createContext({}),u=function(t){var e=o.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=u(t.components);return o.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),m=u(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||r;return n?o.createElement(h,i(i({ref:e},s),{},{components:n})):o.createElement(h,i({ref:e},s))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},55532:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=n(87462),a=(n(67294),n(3905));const r={},i="Button",l={unversionedId:"components/forms/button/index",id:"components/forms/button/index",title:"Button",description:"Button component is used to trigger an action or event, such as submitting a",source:"@site/content/docs/components/forms/button/index.mdx",sourceDirName:"components/forms/button",slug:"/components/forms/button/",permalink:"/docs/components/forms/button/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Toast",permalink:"/docs/components/feedback/toast/"},next:{title:"Theming",permalink:"/docs/components/forms/button/theming"}},p={},u=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Button Sizes",id:"button-sizes",level:3},{value:"Button variants",id:"button-variants",level:3},{value:"Button Colors",id:"button-colors",level:3},{value:"Button with icon",id:"button-with-icon",level:3},{value:"Button loading state",id:"button-loading-state",level:3},{value:"Social Buttons",id:"social-buttons",level:3},{value:"Grouping Buttons",id:"grouping-buttons",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Composition",id:"composition",level:2},{value:"Custom Button",id:"custom-button",level:2},{value:"Props",id:"props",level:2},{value:"Button Props",id:"button-props",level:3},{value:"Button Group Props",id:"button-group-props",level:3}],s=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)},c=s("ComponentLinks"),m=s("PropsTable"),d={toc:u};function h(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"button"},"Button"),(0,a.kt)("p",null,"Button component is used to trigger an action or event, such as submitting a\nform, opening a Dialog, canceling an action, or performing a delete operation."),(0,a.kt)(c,{github:{package:"button"},npm:{package:"@chakra-ui/button"},theme:{componentName:"button"},mdxType:"ComponentLinks"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Button, ButtonGroup } from '@chakra-ui/react';\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Button:")," The button component with support for custom icons, spinners, etc."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ButtonGroup:")," Used to group buttons whose actions are related, with an\noption to flush them together.")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Button colorScheme='blue'>Button</Button>\n")),(0,a.kt)("h3",{id:"button-sizes"},"Button Sizes"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"size")," prop to change the size of the button. You can set the value to\n",(0,a.kt)("inlineCode",{parentName:"p"},"xs"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"sm"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"md"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"lg"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Stack spacing={4} direction='row' align='center'>\n  <Button colorScheme='teal' size='xs'>\n    Button\n  </Button>\n  <Button colorScheme='teal' size='sm'>\n    Button\n  </Button>\n  <Button colorScheme='teal' size='md'>\n    Button\n  </Button>\n  <Button colorScheme='teal' size='lg'>\n    Button\n  </Button>\n</Stack>\n")),(0,a.kt)("h3",{id:"button-variants"},"Button variants"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"variant")," prop to change the visual style of the Button. You can set the\nvalue to ",(0,a.kt)("inlineCode",{parentName:"p"},"solid"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"ghost"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"outline"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"link"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Stack direction='row' spacing={4} align='center'>\n  <Button colorScheme='teal' variant='solid'>\n    Button\n  </Button>\n  <Button colorScheme='teal' variant='outline'>\n    Button\n  </Button>\n  <Button colorScheme='teal' variant='ghost'>\n    Button\n  </Button>\n  <Button colorScheme='teal' variant='link'>\n    Button\n  </Button>\n</Stack>\n")),(0,a.kt)("h3",{id:"button-colors"},"Button Colors"),(0,a.kt)("p",null,"Use the colorScheme prop to change the color scheme of the Button. You can set\nthe value to any of the color scales from your design system, like ",(0,a.kt)("inlineCode",{parentName:"p"},"whiteAlpha"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"blackAlpha"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"gray"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"red"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"blue"),", or your custom color scale."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Stack direction='column'>\n  <Box\n    display='flex'\n    alignItems='center'\n    justifyContent='center'\n    width='100%'\n    py={12}\n    bgImage=\"url('https://bit.ly/2Z4KKcF')\"\n    bgPosition='center'\n    bgRepeat='no-repeat'\n    mb={2}\n  >\n    <ButtonGroup gap='4'>\n      <Button colorScheme='whiteAlpha'>WhiteAlpha</Button>\n      <Button colorScheme='blackAlpha'>BlackAlpha</Button>\n    </ButtonGroup>\n  </Box>\n\n  <Wrap spacing={4}>\n    <WrapItem>\n      <Button colorScheme='gray'>Gray</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='red'>Red</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='orange'>Orange</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='yellow'>Yellow</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='green'>Green</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='teal'>Teal</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='blue'>Blue</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='cyan'>Cyan</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='purple'>Purple</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='pink'>Pink</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='linkedin'>Linkedin</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='facebook'>Facebook</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='messenger'>Messenger</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='whatsapp'>Whatsapp</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='twitter'>Twitter</Button>\n    </WrapItem>\n    <WrapItem>\n      <Button colorScheme='telegram'>Telegram</Button>\n    </WrapItem>\n  </Wrap>\n</Stack>\n")),(0,a.kt)("h3",{id:"button-with-icon"},"Button with icon"),(0,a.kt)("p",null,"You can add left and right icons to the Button component using the ",(0,a.kt)("inlineCode",{parentName:"p"},"leftIcon"),"\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"rightIcon")," props respectively."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: The ",(0,a.kt)("inlineCode",{parentName:"p"},"leftIcon")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"rightIcon")," prop values should be react elements NOT\nstrings.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Stack direction='row' spacing={4}>\n  <Button leftIcon={<EmailIcon />} colorScheme='teal' variant='solid'>\n    Email\n  </Button>\n  <Button rightIcon={<ArrowForwardIcon />} colorScheme='teal' variant='outline'>\n    Call us\n  </Button>\n</Stack>\n")),(0,a.kt)("p",null,"You can also use icons from popular libraries like\n",(0,a.kt)("a",{parentName:"p",href:"https://react-icons.github.io/react-icons/"},"react-icons")," and pass it into the\nbutton."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import { MdBuild , MdCall } from \"react-icons/md\"\n\n<Stack direction='row' spacing={4}>\n  <Button leftIcon={<MdBuild />} colorScheme='pink' variant='solid'>\n    Settings\n  </Button>\n  <Button rightIcon={<MdCall />} colorScheme='blue' variant='outline'>\n    Call us\n  </Button>\n</Stack>\n")),(0,a.kt)("h3",{id:"button-loading-state"},"Button loading state"),(0,a.kt)("p",null,"Pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"isLoading")," prop to show its loading state. By default, the button will\nshow a spinner and leave the button's width unchanged."),(0,a.kt)("p",null,"You can also pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"loadingText")," prop to show a spinner and the loading text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Stack direction='row' spacing={4}>\n  <Button isLoading colorScheme='teal' variant='solid'>\n    Email\n  </Button>\n  <Button\n    isLoading\n    loadingText='Submitting'\n    colorScheme='teal'\n    variant='outline'\n  >\n    Submit\n  </Button>\n</Stack>\n")),(0,a.kt)("p",null,"You can change the spinner element to use custom loaders as per your design\nrequirements. Pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"spinner")," prop and set it to a custom react element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Button\n  isLoading\n  colorScheme='blue'\n  spinner={<BeatLoader size={8} color='white' />}\n>\n  Click me\n</Button>\n")),(0,a.kt)("p",null,"When a ",(0,a.kt)("inlineCode",{parentName:"p"},"loadingText")," is present, you can change the placement of the spinner\nelement to either ",(0,a.kt)("inlineCode",{parentName:"p"},"start")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"end"),". It is ",(0,a.kt)("inlineCode",{parentName:"p"},"start")," by default."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Stack direction='row' spacing={4} align='center'>\n  <Button\n    isLoading\n    loadingText='Loading'\n    colorScheme='teal'\n    variant='outline'\n    spinnerPlacement='start'\n  >\n    Submit\n  </Button>\n  <Button\n    isLoading\n    loadingText='Loading'\n    colorScheme='teal'\n    variant='outline'\n    spinnerPlacement='end'\n  >\n    Continue\n  </Button>\n</Stack>\n")),(0,a.kt)("h3",{id:"social-buttons"},"Social Buttons"),(0,a.kt)("p",null,"We've included the colors for common social media platforms, and you can simply\nuse their buttons via the ",(0,a.kt)("inlineCode",{parentName:"p"},"colorScheme")," prop."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<HStack>\n  <Button colorScheme='facebook' leftIcon={<FaFacebook />}>\n    Facebook\n  </Button>\n  <Button colorScheme='twitter' leftIcon={<FaTwitter />}>\n    Twitter\n  </Button>\n</HStack>\n")),(0,a.kt)("p",null,"The Facebook and Twitter icons in the above example are available from\n",(0,a.kt)("a",{parentName:"p",href:"https://react-icons.netlify.com/#/"},(0,a.kt)("inlineCode",{parentName:"a"},"react-icons"))," as ",(0,a.kt)("inlineCode",{parentName:"p"},"FaFacebook")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"FaTwitter"),", found in the ",(0,a.kt)("inlineCode",{parentName:"p"},"react-icons/fa")," import."),(0,a.kt)("h3",{id:"grouping-buttons"},"Grouping Buttons"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Stack")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"ButtonGroup")," component to group buttons. When you\nuse the ",(0,a.kt)("inlineCode",{parentName:"p"},"ButtonGroup")," component, it allows you to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Set the ",(0,a.kt)("inlineCode",{parentName:"li"},"size")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"variant")," of all buttons within it."),(0,a.kt)("li",{parentName:"ul"},"Add ",(0,a.kt)("inlineCode",{parentName:"li"},"spacing")," between the buttons."),(0,a.kt)("li",{parentName:"ul"},"Flush the buttons together by removing the border radius of their children as\nneeded.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<ButtonGroup variant='outline' spacing='6'>\n  <Button colorScheme='blue'>Save</Button>\n  <Button>Cancel</Button>\n</ButtonGroup>\n")),(0,a.kt)("p",null,"To flush the buttons, pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"isAttached")," prop."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<ButtonGroup size='sm' isAttached variant='outline'>\n  <Button>Save</Button>\n  <IconButton aria-label='Add to friends' icon={<AddIcon />} />\n</ButtonGroup>\n")),(0,a.kt)("h2",{id:"accessibility"},"Accessibility"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Button has ",(0,a.kt)("inlineCode",{parentName:"li"},"role")," of ",(0,a.kt)("inlineCode",{parentName:"li"},"button"),"."),(0,a.kt)("li",{parentName:"ul"},"When Button has focus, ",(0,a.kt)("kbd",null,"Space")," or ",(0,a.kt)("kbd",null,"Enter")," activates it.")),(0,a.kt)("h2",{id:"composition"},"Composition"),(0,a.kt)("p",null,"All props you pass (",(0,a.kt)("inlineCode",{parentName:"p"},"variant"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"colorScheme"),", etc.) are converted to style\nprops. This means you can override any style of the Button via props."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// The size prop affects the height of the button\n// It can still be overridden by passing a custom height\n<Button\n  size='md'\n  height='48px'\n  width='200px'\n  border='2px'\n  borderColor='green.500'\n>\n  Button\n</Button>\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"custom-button"},"Custom Button"),(0,a.kt)("p",null,"In the event that you need to make your own custom button, you can leverage the\n",(0,a.kt)("inlineCode",{parentName:"p"},"Box")," component. It provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"hover"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"focus"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"active")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"disabled")," style\nprops to style the button."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// Button from facebook.com\n<Box\n  as='button'\n  height='24px'\n  lineHeight='1.2'\n  transition='all 0.2s cubic-bezier(.08,.52,.52,1)'\n  border='1px'\n  px='8px'\n  borderRadius='2px'\n  fontSize='14px'\n  fontWeight='semibold'\n  bg='#f5f6f7'\n  borderColor='#ccd0d5'\n  color='#4b4f56'\n  _hover={{ bg: '#ebedf0' }}\n  _active={{\n    bg: '#dddfe2',\n    transform: 'scale(0.98)',\n    borderColor: '#bec3c9',\n  }}\n  _focus={{\n    boxShadow:\n      '0 0 1px 2px rgba(88, 144, 255, .75), 0 1px 1px rgba(0, 0, 0, .15)',\n  }}\n>\n  Join Group\n</Box>\n")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h3",{id:"button-props"},"Button Props"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Button")," composes the ",(0,a.kt)("inlineCode",{parentName:"p"},"Box")," component, so you can pass all its props. These are\nprops specific to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Button")," component:"),(0,a.kt)(m,{of:"Button",mdxType:"PropsTable"}),(0,a.kt)("h3",{id:"button-group-props"},"Button Group Props"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ButtonGroup")," composes the ",(0,a.kt)("inlineCode",{parentName:"p"},"Box")," component, so you can pass all its props. These\nare props specific to the ",(0,a.kt)("inlineCode",{parentName:"p"},"ButtonGroup")," component:"),(0,a.kt)(m,{of:"ButtonGroup",mdxType:"PropsTable"}))}h.isMDXComponent=!0}}]);