"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[5532],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=o.createContext({}),p=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(u.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,k=d["".concat(u,".").concat(m)]||d[m]||i[m]||l;return n?o.createElement(k,r(r({ref:t},c),{},{components:n})):o.createElement(k,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<l;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84763:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var o=n(87462),a=(n(67294),n(3905));const l={title:"useControllableState",package:"@chakra-ui/hooks",description:"React hook to handle controlled vs uncontrolled component scenarios"},r=void 0,s={unversionedId:"hooks/use-controllable",id:"hooks/use-controllable",title:"useControllableState",description:"React hook to handle controlled vs uncontrolled component scenarios",source:"@site/content/docs/hooks/use-controllable.mdx",sourceDirName:"hooks",slug:"/hooks/use-controllable",permalink:"/docs/hooks/use-controllable",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{title:"useControllableState",package:"@chakra-ui/hooks",description:"React hook to handle controlled vs uncontrolled component scenarios"},sidebar:"defaultSidebar",previous:{title:"useConst",permalink:"/docs/hooks/use-const"},next:{title:"useDimensions",permalink:"/docs/hooks/use-dimensions"}},u={},p=[{value:"Import",id:"import",level:2},{value:"useControllableProp",id:"usecontrollableprop",level:2},{value:"Usage",id:"usage",level:3},{value:"useControllableState",id:"usecontrollablestate",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Contextual feedback and State updates",id:"contextual-feedback-and-state-updates",level:3},{value:"Props",id:"props",level:2}],c=(i="PropsTable",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var i;const d={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"React hook that allows any component handle\n",(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/forms.html#controlled-components"},"controlled")," and\n",(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/uncontrolled-components.html"},"uncontrolled")," modes, and\nprovide control over its internal state."),(0,a.kt)("p",null,"Most Chakra components use the ",(0,a.kt)("inlineCode",{parentName:"p"},"useControllableState")," for seamlessly managing\nboth controlled or uncontrolled state scenarios."),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { useControllableProp, useControllableState } from '@chakra-ui/react'\n")),(0,a.kt)("h2",{id:"usecontrollableprop"},"useControllableProp"),(0,a.kt)("p",null,"Given a prop value and state value, the ",(0,a.kt)("inlineCode",{parentName:"p"},"useControllableProp")," hook is used to\ndetermine whether a component is controlled or uncontrolled, and also returns\nthe computed value."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It returns the prop value if the component is controlled"),(0,a.kt)("li",{parentName:"ul"},"It returns the state value if the component is uncontrolled")),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const [isControlled, value] = useControllableProp(propValue, stateValue)\n")),(0,a.kt)("h2",{id:"usecontrollablestate"},"useControllableState"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useControllableState")," hook returns the state and function that updates the\nstate, just like ",(0,a.kt)("inlineCode",{parentName:"p"},"React.useState")," does."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const [value, setValue] = useControllableState(options)\n")),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("p",null,"With ",(0,a.kt)("inlineCode",{parentName:"p"},"useControllableState"),", you can pass an initial state (using\n",(0,a.kt)("inlineCode",{parentName:"p"},"defaultValue"),") implying the component is uncontrolled, or you can pass a\ncontrolled value (using ",(0,a.kt)("inlineCode",{parentName:"p"},"value"),") implying the component is controlled."),(0,a.kt)("p",null,"Here's an example of an uncontrolled state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  const [value, setValue] = useControllableState({ defaultValue: 40 })\n  return (\n    <div>\n      <Button onClick={() => setValue(value + 1)}>+</Button>\n      <Box as='span' w='200px' mx='24px'>\n        {value}\n      </Box>\n      <Button onClick={() => setValue(value - 1)}>-</Button>\n    </div>\n  )\n}\n")),(0,a.kt)("p",null,"Here's an example of a controlled state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  // you need a state and updater to change the value\n  const [value, setValue] = React.useState(40)\n\n  const [internalValue, setInternalValue] = useControllableState({\n    value,\n    onChange: setValue,\n  })\n\n  return (\n    <div>\n      <Button onClick={() => setInternalValue(value + 1)}>+</Button>\n      <Box as='span' w='200px' mx='24px'>\n        {internalValue}\n      </Box>\n      <Button onClick={() => setInternalValue(value - 1)}>-</Button>\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"contextual-feedback-and-state-updates"},"Contextual feedback and State updates"),(0,a.kt)("p",null,"This hook provides helpful error or warning messages ",(0,a.kt)("strong",{parentName:"p"},"when you switch between\ncontrolled or uncontrolled modes")," or ",(0,a.kt)("strong",{parentName:"p"},"when you attempt to update the\n",(0,a.kt)("inlineCode",{parentName:"strong"},"defaultValue")," passed.")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)(c,{of:"useControllableState",mdxType:"PropsTable"}))}m.isMDXComponent=!0}}]);