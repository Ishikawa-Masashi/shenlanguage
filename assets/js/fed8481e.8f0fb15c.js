"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[9090],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,w=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return t?r.createElement(w,i(i({ref:n},u),{},{components:t})):r.createElement(w,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},20825:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>w,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const a={},i="Drawer",l={unversionedId:"components/overlay/drawer/index",id:"components/overlay/drawer/index",title:"Drawer",description:"The Drawer component is a panel that slides out from the edge of the screen.",source:"@site/content/docs/components/overlay/drawer/index.mdx",sourceDirName:"components/overlay/drawer",slug:"/components/overlay/drawer/",permalink:"/shenlanguage/docs/components/overlay/drawer/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Theming",permalink:"/shenlanguage/docs/components/overlay/alert-dialog/theming"},next:{title:"Theming",permalink:"/shenlanguage/docs/components/overlay/drawer/theming"}},s={},p=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Drawer",id:"basic-drawer",level:3},{value:"Drawer placement",id:"drawer-placement",level:3},{value:"Focus on specific element",id:"focus-on-specific-element",level:3},{value:"Drawer Widths",id:"drawer-widths",level:3},{value:"Using a form in a Drawer",id:"using-a-form-in-a-drawer",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Props",id:"props",level:2},{value:"Drawer Props",id:"drawer-props",level:3},{value:"Other components",id:"other-components",level:3}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},c=u("ComponentLinks"),d=u("PropsTable"),m={toc:p};function w(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"drawer"},"Drawer"),(0,o.kt)("p",null,"The Drawer component is a panel that slides out from the edge of the screen.\nIt can be useful when you need users to complete a task or view some details\nwithout leaving the current page."),(0,o.kt)(c,{github:{package:"modal"},npm:{package:"@chakra-ui/modal"},theme:{componentName:"modal"},mdxType:"ComponentLinks"}),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n} from "@chakra-ui/react";\n')),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"basic-drawer"},"Basic Drawer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function DrawerExample() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  return (\n    <>\n      <Button ref={btnRef} colorScheme="teal" onClick={onOpen}>\n        Open\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement="right"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>Create your account</DrawerHeader>\n\n          <DrawerBody>\n            <Input placeholder="Type here..." />\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button variant="outline" mr={3} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button colorScheme="blue">Save</Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n')),(0,o.kt)("h3",{id:"drawer-placement"},"Drawer placement"),(0,o.kt)("p",null,"The Drawer can appear from any edge of the screen. Pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"placement")," prop and\nset it to ",(0,o.kt)("inlineCode",{parentName:"p"},"top"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"right"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"bottom"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"left"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function PlacementExample() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [placement, setPlacement] = React.useState("right");\n\n  return (\n    <>\n      <RadioGroup defaultValue={placement} onChange={setPlacement}>\n        <Stack direction="row" mb="4">\n          <Radio value="top">Top</Radio>\n          <Radio value="right">Right</Radio>\n          <Radio value="bottom">Bottom</Radio>\n          <Radio value="left">Left</Radio>\n        </Stack>\n      </RadioGroup>\n      <Button colorScheme="blue" onClick={onOpen}>\n        Open\n      </Button>\n      <Drawer placement={placement} onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth="1px">Basic Drawer</DrawerHeader>\n          <DrawerBody>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n')),(0,o.kt)("h3",{id:"focus-on-specific-element"},"Focus on specific element"),(0,o.kt)("p",null,"When a form is in the drawer, you might need to set focus on a specific element\nwhen the drawer opens. Pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialFocusRef")," prop."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Without the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialFocusRef")," prop, the drawer will set focus on the ",(0,o.kt)("strong",{parentName:"p"},"first\nfocusable element")," when it opens.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function DrawerExample() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const firstField = React.useRef();\n\n  return (\n    <>\n      <Button leftIcon={<AddIcon />} colorScheme="teal" onClick={onOpen}>\n        Create user\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement="right"\n        initialFocusRef={firstField}\n        onClose={onClose}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader borderBottomWidth="1px">\n            Create a new account\n          </DrawerHeader>\n\n          <DrawerBody>\n            <Stack spacing="24px">\n              <Box>\n                <FormLabel htmlFor="username">Name</FormLabel>\n                <Input\n                  ref={firstField}\n                  id="username"\n                  placeholder="Please enter user name"\n                />\n              </Box>\n\n              <Box>\n                <FormLabel htmlFor="url">Url</FormLabel>\n                <InputGroup>\n                  <InputLeftAddon>http://</InputLeftAddon>\n                  <Input\n                    type="url"\n                    id="url"\n                    placeholder="Please enter domain"\n                  />\n                  <InputRightAddon>.com</InputRightAddon>\n                </InputGroup>\n              </Box>\n\n              <Box>\n                <FormLabel htmlFor="owner">Select Owner</FormLabel>\n                <Select id="owner" defaultValue="segun">\n                  <option value="segun">Segun Adebayo</option>\n                  <option value="kola">Kola Tioluwani</option>\n                </Select>\n              </Box>\n\n              <Box>\n                <FormLabel htmlFor="desc">Description</FormLabel>\n                <Textarea id="desc" />\n              </Box>\n            </Stack>\n          </DrawerBody>\n\n          <DrawerFooter borderTopWidth="1px">\n            <Button variant="outline" mr={3} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button colorScheme="blue">Submit</Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n')),(0,o.kt)("h3",{id:"drawer-widths"},"Drawer Widths"),(0,o.kt)("p",null,"Pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"size")," prop if you need to adjust the size of the drawer. Values can be\n",(0,o.kt)("inlineCode",{parentName:"p"},"xs"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"sm"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"md"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lg"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"xl"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"full"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function SizeExample() {\n  const [size, setSize] = React.useState("");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleClick = (newSize) => {\n    setSize(newSize);\n    onOpen();\n  };\n\n  const sizes = ["xs", "sm", "md", "lg", "xl", "full"];\n\n  return (\n    <>\n      {sizes.map((size) => (\n        <Button\n          onClick={() => handleClick(size)}\n          key={size}\n          m={4}\n        >{`Open ${size} Drawer`}</Button>\n      ))}\n\n      <Drawer onClose={onClose} isOpen={isOpen} size={size}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>{`${size} drawer contents`}</DrawerHeader>\n          <DrawerBody>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              Consequat nisl vel pretium lectus quam id. Semper quis lectus\n              nulla at volutpat diam ut venenatis. Dolor morbi non arcu risus\n              quis varius quam quisque. Massa ultricies mi quis hendrerit dolor\n              magna eget est lorem. Erat imperdiet sed euismod nisi porta.\n              Lectus vestibulum mattis ullamcorper velit.\n            </p>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n')),(0,o.kt)("h3",{id:"using-a-form-in-a-drawer"},"Using a form in a Drawer"),(0,o.kt)("p",null,"If you need to put a form within the Drawer, you might need to use to form\nvalidation library like ",(0,o.kt)("inlineCode",{parentName:"p"},"react-hook-form")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"formik"),". Here's the recommended\nway to do it:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Because the button is located outside the form, you can leverage its native\nHTML ",(0,o.kt)("inlineCode",{parentName:"p"},"form")," attribute and refer to the ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," of the ",(0,o.kt)("inlineCode",{parentName:"p"},"form"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=false",live:"false"},'export const App = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <Button onClick={onOpen}>Open</Button>\n      <Drawer isOpen={isOpen} onClose={onClose}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>Create your account</DrawerHeader>\n\n          <DrawerBody>\n            <form\n              id="my-form"\n              onSubmit={(e) => {\n                e.preventDefault();\n                console.log("submitted");\n              }}\n            >\n              <Input name="nickname" placeholder="Type here..." />\n            </form>\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button type="submit" form="my-form">\n              Save\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n')),(0,o.kt)("h2",{id:"accessibility"},"Accessibility"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When opening the Drawer, focus is trapped inside the Drawer."),(0,o.kt)("li",{parentName:"ul"},"By default, the drawer sets focus on the first focusable element. If the\n",(0,o.kt)("inlineCode",{parentName:"li"},"initialFocusRef")," prop is passed, the drawer sets focus on the element with\nthe assigned ",(0,o.kt)("inlineCode",{parentName:"li"},"ref"),"."),(0,o.kt)("li",{parentName:"ul"},"After the drawer closes, it'll return focus to the element that triggered it.")),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)("h3",{id:"drawer-props"},"Drawer Props"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Drawer")," composes the ",(0,o.kt)("inlineCode",{parentName:"p"},"Modal")," component with these extra props:"),(0,o.kt)(d,{of:"Drawer",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"other-components"},"Other components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DrawerOverlay"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"DrawerFooter"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"DrawerHeader")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"DrawerBody")," composes\n",(0,o.kt)("inlineCode",{parentName:"li"},"Box")," component"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DrawerCloseButton")," composes ",(0,o.kt)("inlineCode",{parentName:"li"},"CloseButton"))))}w.isMDXComponent=!0}}]);