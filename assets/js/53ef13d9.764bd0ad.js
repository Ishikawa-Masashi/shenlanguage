"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[7154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,k=m["".concat(l,".").concat(u)]||m[u]||p[u]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},48382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Semantic Tokens",description:"Chakra UI provides built-in support for conditional semantic design tokens",category:"features"},i=void 0,s={unversionedId:"styled-system/semantic-tokens",id:"styled-system/semantic-tokens",title:"Semantic Tokens",description:"Chakra UI provides built-in support for conditional semantic design tokens",source:"@site/content/docs/styled-system/semantic-tokens.mdx",sourceDirName:"styled-system",slug:"/styled-system/semantic-tokens",permalink:"/shenlanguage/docs/styled-system/semantic-tokens",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{title:"Semantic Tokens",description:"Chakra UI provides built-in support for conditional semantic design tokens",category:"features"},sidebar:"defaultSidebar",previous:{title:"RTL Support",permalink:"/shenlanguage/docs/styled-system/rtl-support"},next:{title:"Style Props",permalink:"/shenlanguage/docs/styled-system/style-props"}},l={},c=[{value:"Token References",id:"token-references",level:2},{value:"Conditional Tokens",id:"conditional-tokens",level:2},{value:"Theme Example",id:"theme-example",level:2}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Chakra UI supports ",(0,r.kt)("strong",{parentName:"p"},"conditional semantic tokens")," for every scale (colors, font\nsizes, etc). This allows to change the value of a token depending on the\nenvironment, like dark mode, direction and other CSS selectors."),(0,r.kt)("p",null,"We are using CSS variables which can change with a CSS condition. E.g. the color\ntoken ",(0,r.kt)("inlineCode",{parentName:"p"},"text")," can have a different value in dark and light mode."),(0,r.kt)("h2",{id:"token-references"},"Token References"),(0,r.kt)("p",null,"A semantic token value can be a ",(0,r.kt)("inlineCode",{parentName:"p"},"string | SemanticValue"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," value is\nused as reference to another token in the same scale e.g."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  error: 'red.500';\n}\n")),(0,r.kt)("h2",{id:"conditional-tokens"},"Conditional Tokens"),(0,r.kt)("p",null,"The object notation ",(0,r.kt)("inlineCode",{parentName:"p"},"SemanticValue")," allows to define the default value and\nconditional keys. The condition can be one of\n",(0,r.kt)("a",{parentName:"p",href:"/docs/styled-system/style-props#pseudo"},"chakra pseudo selectors")," or a\ncustom CSS selector. Try ",(0,r.kt)("inlineCode",{parentName:"p"},"_dark"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_light"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_rtl"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_ltr")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"_mediaReduceMotion"),"."),(0,r.kt)("p",null,"If you are tempted to use a CSS selector like ",(0,r.kt)("inlineCode",{parentName:"p"},"_focus"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_hover")," etc. define\nthose CSS variables at the component level."),(0,r.kt)("p",null,"The CSS variables are attached to the host element (CSS selector ",(0,r.kt)("inlineCode",{parentName:"p"},":host, :root"),")\nand cannot react to the components ",(0,r.kt)("inlineCode",{parentName:"p"},"<LightMode />")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<DarkMode />"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"data-theme")," attributes nor body class ",(0,r.kt)("inlineCode",{parentName:"p"},".chakra-ui-dark"),". It listens to e.g.\n",(0,r.kt)("inlineCode",{parentName:"p"},'html[data-theme="dark"]'),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Since the CSS variables are attached to the host element by default we can\nonly specify certain CSS selectors. E.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"_hover")," would always trigger, when\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"html")," element is hovered - that's mostly not intended.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  text: {\n    default: 'gray.900',\n    _dark: 'gray.50'\n  }\n}\n")),(0,r.kt)("p",null,"Semantic Tokens can reference theme tokens like ",(0,r.kt)("inlineCode",{parentName:"p"},"gray.900")," and allow plain CSS\nvalues like e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"#F7FAFC"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ChakraProvider, extendTheme } from '@chakra-ui/react';\nconst customTheme = extendTheme({\n  semanticTokens: {\n    colors: {\n      error: 'red.500',\n      text: {\n        default: 'gray.900',\n        _dark: 'gray.50',\n      },\n    },\n  },\n});\n\nconst App = () => (\n  <ChakraProvider theme={customTheme}>\n    <Text color='text'>\n      will be gray.900 in light mode and gray.50 in dark mode\n    </Text>\n  </ChakraProvider>\n);\n")),(0,r.kt)("h2",{id:"theme-example"},"Theme Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { extendTheme } from '@chakra-ui/react';\n\nconst theme = extendTheme({\n  semanticTokens: {\n    colors: {\n      error: 'red.500',\n      success: 'green.500',\n      primary: {\n        default: 'red.500',\n        _dark: 'red.400',\n      },\n      secondary: {\n        default: 'red.800',\n        _dark: 'red.700',\n      },\n    },\n  },\n});\n")))}p.isMDXComponent=!0}}]);