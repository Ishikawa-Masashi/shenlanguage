"use strict";(self.webpackChunkchakra_ui_docs=self.webpackChunkchakra_ui_docs||[]).push([[2892],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var o=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},l=Object.keys(t);for(o=0;o<l.length;o++)n=l[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(o=0;o<l.length;o++)n=l[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i=o.createContext({}),s=function(t){var e=o.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=s(t.components);return o.createElement(i.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,i=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(i,".").concat(d)]||m[d]||u[d]||l;return n?o.createElement(h,r(r({ref:e},c),{},{components:n})):o.createElement(h,r({ref:e},c))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,r=new Array(l);r[0]=m;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p.mdxType="string"==typeof t?t:a,r[1]=p;for(var s=2;s<l;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66002:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var o=n(87462),a=(n(67294),n(3905));const l={},r="Tooltip",p={unversionedId:"components/overlay/tooltip/index",id:"components/overlay/tooltip/index",title:"Tooltip",description:"A tooltip is a brief, informative message that appears when a user interacts",source:"@site/content/docs/components/overlay/tooltip/index.mdx",sourceDirName:"components/overlay/tooltip",slug:"/components/overlay/tooltip/",permalink:"/shenlanguage/docs/components/overlay/tooltip/",draft:!1,tags:[],version:"current",lastUpdatedBy:"IshikawaMasashi",lastUpdatedAt:1675135144,formattedLastUpdatedAt:"Jan 31, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Theming",permalink:"/shenlanguage/docs/components/overlay/popover/theming"},next:{title:"Theming",permalink:"/shenlanguage/docs/components/overlay/tooltip/tooltip"}},i={},s=[{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Using custom components",id:"using-custom-components",level:3},{value:"With an icon",id:"with-an-icon",level:3},{value:"With arrow",id:"with-arrow",level:3},{value:"Tooltip with focusable content",id:"tooltip-with-focusable-content",level:3},{value:"Disabling Tooltip",id:"disabling-tooltip",level:3},{value:"Placement",id:"placement",level:2},{value:"More examples",id:"more-examples",level:2},{value:"Props",id:"props",level:2}],c=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)},u=c("ComponentLinks"),m=c("PropsTable"),d={toc:s};function h(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tooltip"},"Tooltip"),(0,a.kt)("p",null,"A tooltip is a brief, informative message that appears when a user interacts\nwith an element."),(0,a.kt)(u,{github:{package:"tooltip"},npm:{package:"@chakra-ui/tooltip"},theme:{componentName:"tooltip"},mdxType:"ComponentLinks"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { Tooltip } from "@chakra-ui/react";\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," of Tooltip is a ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", we wrap with in a ",(0,a.kt)("inlineCode",{parentName:"p"},"span")," with\n",(0,a.kt)("inlineCode",{parentName:"p"},"tabIndex")," set to ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),", to ensure it meets the accessibility requirements."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note \ud83d\udea8: If the ",(0,a.kt)("inlineCode",{parentName:"p"},"Tooltip")," is wrapping a functional component, ensure that the\nfunctional component accepts a ",(0,a.kt)("inlineCode",{parentName:"p"},"ref")," using ",(0,a.kt)("inlineCode",{parentName:"p"},"forwardRef"),".")),(0,a.kt)("h3",{id:"using-custom-components"},"Using custom components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"manual=true",manual:"true"},'const CustomCard = React.forwardRef(({ children, ...rest }, ref) => (\n  <Box p="1">\n    <Tag ref={ref} {...rest}>\n      {children}\n    </Tag>\n  </Box>\n));\n\nconst CustomToolTip = () => (\n  <Tooltip label="Hover me">\n    <CustomCard>Tag Here</CustomCard>\n  </Tooltip>\n);\n\nrender(<CustomToolTip />);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip label="Hey, I\'m here!" aria-label="A tooltip">\n  Hover me\n</Tooltip>\n')),(0,a.kt)("h3",{id:"with-an-icon"},"With an icon"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip label="Phone number" fontSize="md">\n  <PhoneIcon />\n</Tooltip>\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note \ud83d\udea8: If you're wrapping an icon from ",(0,a.kt)("inlineCode",{parentName:"p"},"react-icons"),", you need to also wrap\nthe icon in a ",(0,a.kt)("inlineCode",{parentName:"p"},"span")," element as\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/react-icons/react-icons/issues/336"},(0,a.kt)("inlineCode",{parentName:"a"},"react-icons")," icons do not use ",(0,a.kt)("inlineCode",{parentName:"a"},"forwardRef")),".")),(0,a.kt)("h3",{id:"with-arrow"},"With arrow"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip hasArrow label="Search places" bg="gray.300" color="black">\n  <SearchIcon />\n</Tooltip>\n')),(0,a.kt)("h3",{id:"tooltip-with-focusable-content"},"Tooltip with focusable content"),(0,a.kt)("p",null,"If the children of the tooltip is a focusable element, the tooltip will show\nwhen you focus or hover on the element, and will hide when you blur or move\ncursor out of the element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip hasArrow label="Search places" bg="red.600">\n  <Button>Button</Button>\n</Tooltip>\n')),(0,a.kt)("h3",{id:"disabling-tooltip"},"Disabling Tooltip"),(0,a.kt)("p",null,"To disable showing a tooltip, pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"isDisabled")," prop to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Tooltip"),"\ncomponent."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Tooltip isDisabled>\n  <SearchIcon />\n</Tooltip>\n")),(0,a.kt)("h2",{id:"placement"},"Placement"),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"placement")," prop you can adjust where your tooltip will be displayed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<VStack spacing={6}>\n  <HStack spacing={6}>\n    <Tooltip label="Auto start" placement="auto-start">\n      <Button>Auto-Start</Button>\n    </Tooltip>\n\n    <Tooltip label="Auto" placement="auto">\n      <Button>Auto</Button>\n    </Tooltip>\n\n    <Tooltip label="Auto end" placement="auto-end">\n      <Button>Auto-End</Button>\n    </Tooltip>\n  </HStack>\n\n  <HStack spacing={6}>\n    <Tooltip label="Top start" placement="top-start">\n      <Button>Top-Start</Button>\n    </Tooltip>\n\n    <Tooltip label="Top" placement="top">\n      <Button>Top</Button>\n    </Tooltip>\n\n    <Tooltip label="Top end" placement="top-end">\n      <Button>Top-End</Button>\n    </Tooltip>\n  </HStack>\n\n  <HStack spacing={6}>\n    <Tooltip label="Right start" placement="right-start">\n      <Button>Right-Start</Button>\n    </Tooltip>\n\n    <Tooltip label="Right" placement="right">\n      <Button>Right</Button>\n    </Tooltip>\n\n    <Tooltip label="Right end" placement="right-end">\n      <Button>Right-End</Button>\n    </Tooltip>\n  </HStack>\n\n  <HStack spacing={6}>\n    <Tooltip label="Bottom start" placement="bottom-start">\n      <Button>Bottom Start</Button>\n    </Tooltip>\n\n    <Tooltip label="Bottom" placement="bottom">\n      <Button>Bottom</Button>\n    </Tooltip>\n\n    <Tooltip label="Bottom end" placement="bottom-end">\n      <Button>Bottom End</Button>\n    </Tooltip>\n  </HStack>\n\n  <HStack spacing={6}>\n    <Tooltip label="Left start" placement="left-start">\n      <Button>Left-Start</Button>\n    </Tooltip>\n\n    <Tooltip label="Left" placement="left">\n      <Button>Left</Button>\n    </Tooltip>\n\n    <Tooltip label="Left end" placement="left-end">\n      <Button>Left-End</Button>\n    </Tooltip>\n  </HStack>\n</VStack>\n')),(0,a.kt)("h2",{id:"more-examples"},"More examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Wrap spacing={6}>\n  <WrapItem>\n    <Tooltip label="I close on click">\n      <Button>Close on Click - true(default)</Button>\n    </Tooltip>\n  </WrapItem>\n\n  <WrapItem>\n    <Tooltip label="I don\'t close on click" closeOnClick={false}>\n      <Button>Close on Click - false</Button>\n    </Tooltip>\n  </WrapItem>\n\n  <WrapItem>\n    <Tooltip label="I am always open" placement="top" isOpen>\n      <Button>Always Open</Button>\n    </Tooltip>\n  </WrapItem>\n\n  <WrapItem>\n    <Tooltip label="I am open by default" placement="left" defaultIsOpen>\n      <Button>Open on startup</Button>\n    </Tooltip>\n  </WrapItem>\n\n  <WrapItem>\n    <Tooltip label="Opened after 500ms" openDelay={500}>\n      <Button>Delay Open - 500ms</Button>\n    </Tooltip>\n  </WrapItem>\n\n  <WrapItem>\n    <Tooltip label="Closed after 500ms" closeDelay={500}>\n      <Button>Delay Close - 500ms</Button>\n    </Tooltip>\n  </WrapItem>\n\n  <WrapItem>\n    <Tooltip label="I have 15px arrow" hasArrow arrowSize={15}>\n      <Button>Arrow size - 15px</Button>\n    </Tooltip>\n  </WrapItem>\n</Wrap>\n')),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)(m,{of:"Tooltip",mdxType:"PropsTable"}))}h.isMDXComponent=!0}}]);